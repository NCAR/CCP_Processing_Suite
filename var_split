#!/bin/sh
#
# See http://www.cgd.ucar.edu/~njn01/ccsm/draft.html
#
# Input filenames of forms:
# b30.030e.pop.h.1870-01.nc      (monthly average)
# Output filenames of forms:
# b30.030e.pop.h.TEMP.1870-01.nc (monthly average of TEMP, only)
#
if [ $# -eq 0 ] ; then
   echo "Usage: ccsm_var_split file [erase]"
   echo "2 args means erase file after fields extracted."
   exit 1
elif [ $# -eq 1 ] ; then
   FILE=$1
elif [ $# -eq 2 ] ; then
   FILE=$1
else
   echo "Usage: ccsm_var_split file [erase]"
   echo "2 args means erase file after fields extracted."
   exit 1
fi
#
if [ ! -f $FILE ] ; then
   echo $FILE "not found. Exit."
   exit 1
fi
# 
# Check for ncks
#
if [ ! $NCKS ] ; then
   TEST4NCKS=`which ncks 2<&1 >& /dev/null`
   if [ $? -eq 0 ] ; then
     NCKS=`which ncks`
   else
     echo "NCKS not in PATH - UNDEFINED"
     exit 1
   fi
fi
#
# Parse filename
#
FLEN=`echo $FILE | wc -c`
NDOT=0
CSTR=1
while [ $CSTR -le $FLEN ] ; do
  CURC=`echo $FILE | cut -c${CSTR}-${CSTR}`
  if [ "$CURC" = "." ] ; then
     NDOT=`expr '(' $NDOT ')' '+' '1'`
  fi
  CSTR=`expr '(' $CSTR ')' '+' '1'`
done
IDOT=1
DPFX=1
DSFX=1
while [ $IDOT -le $NDOT ] ; do
  CURC=`echo $FILE | cut -d "." -f${IDOT}-${IDOT}`
  case "$CURC" in
    cam2 )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
    clm2 )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
    pop )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
    csim )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
  esac
  IDOT=`expr '(' $IDOT ')' '+' '1'`
done
OUTPFX=`echo $FILE | cut -d"." -f1-${DPFX}`
OUTSFX=`echo $FILE | cut -d"." -f${DSFX}-`
#
D0VARS=`$NCKS -m $FILE | egrep "# dim\. = 0" | cut -d":" -f1`
D1VARS=`$NCKS -m $FILE | egrep "# dim\. = 1" | cut -d":" -f1`
D2VARS=`$NCKS -m $FILE | egrep "# dim\. = 2" | cut -d":" -f1`
D3VARS=`$NCKS -m $FILE | egrep "# dim\. = 3" | cut -d":" -f1`
D4VARS=`$NCKS -m $FILE | egrep "# dim\. = 4" | cut -d":" -f1`
D5VARS=`$NCKS -m $FILE | egrep "# dim\. = 5" | cut -d":" -f1`
#
# Get auxiliary header fields
#
if [ `echo $D2VARS | wc -w` -ne 0 ] ; then
  if [ `echo $D1VARS | wc -w` -ne 0 ] ; then
    if [ `echo $D0VARS | wc -w` -ne 0 ] ; then
      D0HEAD=`echo $D0VARS | sed -e 's/ /,/g'`
      D1HEAD=`echo $D1VARS | sed -e 's/ /,/g'`
      D2HEAD=`echo $D2VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D0HEAD","$D1HEAD","$D2HEAD | sed -e 's/^,//g'`
    else
      D1HEAD=`echo $D1VARS | sed -e 's/ /,/g'`
      D2HEAD=`echo $D2VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D1HEAD","$D2HEAD | sed -e 's/^,//g'`
    fi
  else
    if [ `echo $D0VARS | wc -w` -ne 0 ] ; then
      D0HEAD=`echo $D0VARS | sed -e 's/ /,/g'`
      D2HEAD=`echo $D2VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D0HEAD","$D2HEAD | sed -e 's/^,//g'`
    else
      D2HEAD=`echo $D2VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D2HEAD | sed -e 's/^,//g'`
    fi
  fi
else
  if [ `echo $D1VARS | wc -w` -ne 0 ] ; then
    if [ `echo $D0VARS | wc -w` -ne 0 ] ; then
      D0HEAD=`echo $D0VARS | sed -e 's/ /,/g'`
      D1HEAD=`echo $D1VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D0HEAD","$D1HEAD | sed -e 's/^,//g'`
    else
      D1HEAD=`echo $D1VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D1HEAD | sed -e 's/^,//g'`
    fi
  else
    if [ `echo $D0VARS | wc -w` -ne 0 ] ; then
      D0HEAD=`echo $D0VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D0HEAD | sed -e 's/^,//g'`
    else
      D2HEAD=`echo $D2VARS | sed -e 's/ /,/g'`
      HEADER=`echo $D2HEAD | sed -e 's/^,//g'`
    fi
  fi
fi
#
# Get variable fields
#
if [ `echo $D3VARS | wc -w` -ne 0 ] ; then
  FIELDS3D=`echo $D3VARS`
fi
if [ `echo $D4VARS | wc -w` -ne 0 ] ; then
  FIELDS4D=`echo $D4VARS`
fi
if [ `echo $D5VARS | wc -w` -ne 0 ] ; then
  FIELDS5D=`echo $D5VARS`
fi
#
# 3D vars
#
if [ `echo $FIELDS3D | wc -w` -ne 0 ] ; then
  for f in $FIELDS3D ; do
    if [ ! -d ${f}_3d.d ] ; then
      mkdir ${f}_3d.d
    fi
    OUT=${f}_3d.d/${OUTPFX}.${f}.${OUTSFX}
    $NCKS -O -v ${HEADER},${f} $FILE $OUT
    if [ $? -ne 0 ] ; then
      echo "NCKS -O -v ${HEADER},${f} $FILE $OUT failed"
      exit 1
    fi
  done
fi
#
# 4D vars
#
if [ `echo $FIELDS4D | wc -w` -ne 0 ] ; then
  for f in $FIELDS4D ; do
    if [ ! -d ${f}_4d.d ] ; then
      mkdir ${f}_4d.d
    fi
    OUT=${f}_4d.d/${OUTPFX}.${f}.${OUTSFX}
    $NCKS -O -v ${HEADER},${f} $FILE $OUT
    if [ $? -ne 0 ] ; then
      echo "NCKS -O -v ${HEADER},${f} $FILE $OUT failed"
      exit 1
    fi
  done
fi
#
# 5D vars
#
if [ `echo $FIELDS5D | wc -w` -ne 0 ] ; then
  for f in $FIELDS5D ; do
    if [ ! -d ${f}_5d.d ] ; then
      mkdir ${f}_5d.d
    fi
    OUT=${f}_5d.d/${OUTPFX}.${f}.${OUTSFX}
    $NCKS -O -v ${HEADER},${f} $FILE $OUT
    if [ $? -ne 0 ] ; then
      echo "NCKS -O -v ${HEADER},${f} $FILE $OUT failed"
      exit 1
    fi
  done
fi
#
if [ $# -gt 1 ] ; then
  rm -f $FILE
fi
