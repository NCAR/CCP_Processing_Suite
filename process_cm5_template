   CASE=xxxCASExxx ; export CASE
   HIST=xxxHISTxxx ; export HIST
   TPER=xxxTPERxxx ; export TPER
DO_PROC=xxxPROCxxx ; export DO_PROC
#
# Template for processing CCSM history netCDF files into single-field format 
# and/or CMIP format
#
# Extract information from "experiments.txt"
#
#  Columns   Field
#   1 -  39  CCSM case name
#  40 -  41  Location (NC = NCAR; NE = NERSC; OR = ORNL)
#  45 -  64  Very brief description and/or PCMDI name (n/a if not applicable)
#  65 -  69  Realization number (2 digits) (0 if not applicable)
#  70 -  72  Is a CMIP3 (cm3) or CMIP5 (cm5) experiment?
#  75 - 100  Parent CCSM case name
# 105 - 114  Branch date (yyyy-mm-dd, "none" if out-of-the-box)
# 120 - 123  Year began
# 125 - 128  Year ended
# 130 - 138  Resolution
# 140 - 149  Hardware
# 150 - end  History file location on archive
#
#
# ASB - procstat
#
echo "BEGIN : procstat"
./procstat.sh start

EXPFILE=${HOME}/CCP_Processing_Suite/experiments.txt ; export EXPFILE
if [ -f $EXPFILE ] ; then
  LOCATION=`egrep "^$CASE " $EXPFILE | cut -c40-  | cut -d" " -f1`
   DESCRIP=`egrep "^$CASE " $EXPFILE | cut -c45-  | cut -d" " -f1`
   REALIZN=`egrep "^$CASE " $EXPFILE | cut -c65-  | cut -d" " -f1`
      CMIP=`egrep "^$CASE " $EXPFILE | cut -c70-  | cut -d" " -f1`
    PARENT=`egrep "^$CASE " $EXPFILE | cut -c75-  | cut -d" " -f1`
    BRANCH=`egrep "^$CASE " $EXPFILE | cut -c105- | cut -d" " -f1`
   YEARBEG=`egrep "^$CASE " $EXPFILE | cut -c120- | cut -d" " -f1`
   YEAREND=`egrep "^$CASE " $EXPFILE | cut -c125- | cut -d" " -f1`
       RES=`egrep "^$CASE " $EXPFILE | cut -c130- | cut -d" " -f1`
  HARDWARE=`egrep "^$CASE " $EXPFILE | cut -c140- | cut -d" " -f1`
  HISTBASE=`egrep "^$CASE " $EXPFILE | cut -c150- | cut -d" " -f1`
else
  echo "Cannot find $EXPFILE. EXIT"
  ./procstat.sh error process_cm5_template
  exit 1
fi
#
if ! [ $LOCATION ] ; then
  echo "Unable to set variables because "$CASE" not found in $EXPFILE"
  ./procstat.sh error process_cm5_template
  exit 1
fi
#
YRCOUNT=`expr '(' $YEAREND '-' $YEARBEG ')' '+' '1'`
MNCOUNT=`expr '(' '(' $YEAREND '-' $YEARBEG ')' '+' '1' ')' '*' '12'`
#
# Acquire PROCHOST
#
PROCHOST=`hostname`;export PROCHOST
#
# resolve machine/site dependencies
#
case "$PROCHOST" in 
  copper* )                                # copper @ CGD/NCAR
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/usr/local/bin/ncks             ; export NCKS
    NCRCAT=/usr/local/bin/ncrcat         ; export NCRCAT
    NCARG_ROOT=/contrib/ncarg            ; export NCARG_ROOT
    PROCBASE=/datalocal/proc/$USER/$CASE ; export PROCBASE
    LOCALDSK=/datalocal/proc/$CASE       ; export LOCALDSK
    ARCHIVE_BASE=/CCSM/csm               ; export ARCHIVE_BASE
    alias hsi='/contrib/hpss/bin/hsi'    ;
    ;;

  tramhill* | hurricane* )                                # tramhill/hurricane @ CGD/NCAR
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/usr/local/bin/ncks              ; export NCKS
    NCRCAT=/usr/local/bin/ncrcat          ; export NCRCAT
    NCARG_ROOT=/contrib/ncarg             ; export NCARG_ROOT
    PROCBASE=/project/yampa01/$USER/$CASE ; export PROCBASE
    ARCHIVE_BASE=/CCSM/csm                ; export ARCHIVE_BASE
    alias hsi='/contrib/hpss/bin/hsi'    ;
    ;;

  mirage* )                                # DASG @ CISL/NCAR
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/fs/local/bin/ncks                       ; export NCKS
    NCRCAT=/fs/local/bin/ncrcat                   ; export NCRCAT
    NCARG_ROOT=/fs/local/apps/ncl-5.2.0           ; export NCARG_ROOT
    PROCBASE=/glade/data01/CMIP5/proc/$USER/$CASE ; export PROCBASE
    LOCALDSK=/glade/data01/CMIP5/CCSM/csm/$CASE   ; export LOCALDSK
    ARCHIVE_BASE=/CCSM/csm                        ; export ARCHIVE_BASE
    ;;

  euclid* )                                # euclid @ NERSC
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/global/u2/s/strandwg/bin/ncks     ; export NCKS
    NCRCAT=/global/u2/s/strandwg/bin/ncrcat ; export NCRCAT
    NCARG_ROOT=/usr/common/usg/ncar/5.2.0   ; export NCARG_ROOT
    PROCBASE=/global/scratch/sd/$USER/$CASE ; export PROCBASE
    LOCALDSK=/global/scratch/sd/$USER/$CASE ; export LOCALDSK
    ARCHIVE_BASE=/home/c/ccsm/csm           ; export ARCHIVE_BASE
    ;;

  lens* )                                # lens @ ORNL
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/ccs/home/wgstrand/bin/ncks                   ; export NCKS
    NCRCAT=/ccs/home/wgstrand/bin/ncrcat               ; export NCRCAT
    NCARG_ROOT=/sw/analysis-x64/ncl/5.0.0/sl5.0_binary ; export NCARG_ROOT
    PROCBASE=/tmp/work/$USER/$CASE                     ; export PROCBASE
    LOCALDSK=/tmp/work/$USER/$CASE                     ; export LOCALDSK
    ARCHIVE_BASE=/f2/ccsm/csm                          ; export ARCHIVE_BASE
    ;;
  * ) 
    echo "Unable to continue because "$PROCHOST" not known."
    ./procstat.sh error process_cm5_template
    exit 1 ;;
esac
#
# Strip off first part of $HIST
#
HTYP=`echo $HIST | cut -d'.' -f1` ; export HTYP
#
# Convert history type to component name
#
case "$HTYP" in
  cam2 )
    COMP_NAME=atm ;;
  clm2 ) 
    COMP_NAME=lnd ;;
  pop  ) 
    COMP_NAME=ocn ;;
  csim | cice ) 
    COMP_NAME=ice ;;
  * ) 
    echo "Unable to continue because "$HIST" not known."
    ./procstat.sh error process_cm5_template
    exit 1 ;;
esac
#
# Set up local names and archival names
#
LOCAL_HIST=$LOCALDSK/$COMP_NAME/hist
LOCAL_PROC=$PROCBASE/$COMP_NAME
ARCHIVE_HIST=$HISTBASE/$CASE/$COMP_NAME/hist
ARCHIVE_PROC=$ARCHIVE_BASE/$CASE/$COMP_NAME/proc/tseries
#
case "$TPER" in
  mon )
    ARCHIVE_PROC=${ARCHIVE_PROC}/monthly  ;;
  day )
    ARCHIVE_PROC=${ARCHIVE_PROC}/daily    ;;
  hr6 )
    ARCHIVE_PROC=${ARCHIVE_PROC}/hourly6  ;;
  hr3 )
    ARCHIVE_PROC=${ARCHIVE_PROC}/hourly3  ;;
  * ) 
    echo "Unable to continue because "$TPER" not known."
    ./procstat.sh error process_cm5_template
    exit 1 ;;
esac
#
LOCAL_PROC=${LOCAL_PROC}/${TPER}
CACHEDIR=${LOCAL_PROC}/to_archive
#
# Print out values
#
echo "           Case name : "$CASE ; export CASE
echo "   History file type : "$HIST ; export HIST
if [ $DO_PROC -ne 0 ] ; then
  echo "   by var processing : YES"
  echo "     Processed files : "$ARCHIVE_PROC  ; export ARCHIVE_PROC
else
  echo "   by var processing : NO"
fi
echo "     CMIP processing : NO"
if [ "$LOCATION" = "NC" ] ; then
  HARDWARE=${HARDWARE}".ucar.edu"
fi
if [ "$LOCATION" = "NE" ] ; then
  HARDWARE=${HARDWARE}".nersc.gov"
fi
if [ "$LOCATION" = "OR" ] ; then
  HARDWARE=${HARDWARE}".ccs.ornl.gov"
fi
echo "            Location : "$LOCATION ; export LOCATION
echo "         Description : "$DESCRIP  ; export DESCRIP
echo "         Realization : "$REALIZN  ; export REALIZN
echo "         Parent case : "$PARENT   ; export PARENT
echo "         Branch date : "$BRANCH   ; export BRANCH
echo "          Resolution : "$RES      ; export RES
echo "            Hardware : "$HARDWARE ; export HARDWARE
echo "          Begin year : "$YEARBEG  ; export YEARBEG
echo "            End year : "$YEAREND  ; export YEAREND
echo "          Year count : "$YRCOUNT  ; export YRCOUNT
echo "        Months count : "$MNCOUNT  ; export MNCOUNT
echo ""
echo "   Archival base dir : "$ARCHIVE_BASE  ; export ARCHIVE_BASE
echo "       History files : "$ARCHIVE_HIST  ; export ARCHIVE_HIST
echo "       History names : "$HIST          ; export HIST
echo ""
echo "     Processing host : "$PROCHOST      ; export PROCHOST
echo " Local history files : "$LOCAL_HIST    ; export LOCAL_HIST
echo "      Processing dir : "$LOCAL_PROC    ; export LOCAL_PROC
echo "   Archive cache dir : "$CACHEDIR      ; export CACHEDIR
echo " Processing code dir : "$BASEDIR       ; export BASEDIR
#  
if [ ! -d $LOCAL_PROC ] ; then 
  mkdir -p $LOCAL_PROC 
fi
if [ ! -d $CACHEDIR ] ; then 
  mkdir -p $CACHEDIR 
fi
cd $LOCAL_PROC
#
if [ $DO_PROC -ne 0 ] ; then
  if [ "$TPER" != "mon" ] ; then
    ln -s -f $BASEDIR/time_split    .
    ln -s -f $BASEDIR/days_to_month .
  fi
  ln -s -f $BASEDIR/mss_list   .
  ln -s -f $BASEDIR/mss_read   .
  ln -s -f $BASEDIR/mss_write  .
  ln -s -f $BASEDIR/var_split  .
  ln -s -f $BASEDIR/var_mon_to_year .
  ln -s -f $BASEDIR/var_year_to_dec .
  ln -s -f $BASEDIR/var_year_to_all .
  ln -s -f $BASEDIR/var_dec_to_cen  .
  ln -s -f $BASEDIR/add_year        .
fi
#
ln -s -f $BASEDIR/concatenate_data    .
ln -s -f $BASEDIR/store_to_archive    .
ln -s -f $BASEDIR/procstat.sh         .
#
cd $LOCAL_PROC
#
# Start actual processing, one year at a time
#
YEARNOW=$YEARBEG;export YEARNOW
while [ $YEARNOW -le $YEAREND ] ; do
  ./procstat.sh
  YRCHECK=.comp.$CASE.$HIST.$YEARNOW
  if [ ! -f $YRCHECK ] ; then
    ARCHIVE_LIST=archive.$CASE.$HIST
    if [ ! -f $ARCHIVE_LIST ] ; then
      echo "Getting archival list of "$CASE" "$HIST
      ./mss_list $ARCHIVE_LIST
    fi
    echo "Processing "$CASE"."$HIST"."$YEARNOW" at "`date`
    if [ -d $LOCAL_HIST ] ; then
      NHISTF=`/bin/ls ${LOCAL_HIST}/${CASE}.${HIST}.${YEARNOW}* | wc -l`
      if [ $NHISTF -ne 0 ] ; then
        echo ${CASE}"."${HIST}"."${YEARNOW}" files on disk, softlinking."
        ln -s -f ${LOCAL_HIST}/${CASE}.${HIST}.${YEARNOW}* .
      else
        ./mss_read $ARCHIVE_LIST $YEARNOW
        if [ $? -ne 0 ] ; then
          echo "Error from mss_read"
         ./procstat.sh error process_cm5_template
         exit 1
        fi
      fi
    fi
    if [ -f $CASE.$HIST.$YEARNOW*.tar ] ; then
      for TARFILE in `/bin/ls $CASE.$HIST.$YEARNOW.tar` ; do
        tar xf $TARFILE
        if [ $? -ne 0 ] ; then
          echo "Error untarring "$TARFILE
        else
          rm -f $TARFILE
        fi
      done
    fi
    if [ "$TPER" = "mon" ] ; then
      for FILE in `/bin/ls $CASE.$HIST.${YEARNOW}-??.nc` ; do
        if [ $DO_PROC -ne 0 ] ; then
          ./var_split $FILE erase
          if [ $? -ne 0 ] ; then
            echo "Error from var_split on file "$FILE
            ./procstat.sh error process_cm5_template
            exit 1
          else
            touch .proc.$FILE
          fi
        fi
        if [ -f .proc.$FILE ] ; then
          touch .comp.$FILE
          rm -f .proc.$FILE
        fi
      done
    else
      for FILE in `/bin/ls $CASE.$HIST.${YEARNOW}*.nc` ; do
        NTIMES=`$NCKS -M $FILE | egrep "name = time" | cut -d"=" -f3`
        if [ "$HIST" = "cam2.h1" ] ; then
          if [ $NTIMES -ne 365 ] ; then
            ./time_split $FILE erase
            ./days_to_month erase
          else
            TRIMD=`echo $FILE | sed -e 's/\-01\-01\-00000//g'`
            mv $FILE $TRIMD
          fi
        else
          if [ "$HIST" = "pop.h.nday1" ] || [ "$HIST" = "pop.h2" ] ; then
            TRIMD=`echo $FILE | cut -d"-" -f1-2`
            mv $FILE ${TRIMD}.nc
          fi
        fi
      done
      for FILE in `/bin/ls $CASE.$HIST.${YEARNOW}*.nc` ; do
        if [ $DO_PROC -ne 0 ] ; then
          ./var_split $FILE erase
          if [ $? -ne 0 ] ; then
            echo "Error from var_split on file "$FILE
            ./procstat.sh error process_cm5_template
            exit 1
          else
            touch .proc.$FILE
          fi
        fi
        if [ -f .proc.$FILE ] ; then
          touch .comp.$FILE
        fi
      done
    fi
    if [ `/bin/ls .comp.$CASE.$HIST.${YEARNOW}*.nc | wc -l` -eq 1 ] ; then
      touch $YRCHECK
      rm .????.$CASE.$HIST.${YEARNOW}*.nc
    else
      if [ `/bin/ls .comp.$CASE.$HIST.${YEARNOW}*.nc | wc -l` -eq 12 ] ; then
        touch $YRCHECK
        rm .????.$CASE.$HIST.${YEARNOW}*.nc
      fi
    fi
  fi
#
# Concatenate all months into respective years, at every year done 
#
  echo "Concatenating years at "${YEARNOW}" at "`date`
  ./concatenate_data M2Y
#
  YEARNOW=`expr $YEARNOW + 1`
  if [ $YEARNOW -lt 1000 ] ; then
    YEARNOW=0${YEARNOW}
  fi
  if [ $YEARNOW -lt 100 ] ; then
    YEARNOW=0${YEARNOW}
  fi
  if [ $YEARNOW -lt 10 ] ; then
    YEARNOW=0${YEARNOW}
  fi
  export YEARNOW
#
# Concatenate years into decadal segments if more than 31 years of data
#
  CHECKDEC=`expr $YEARNOW % 10`
  if [ $CHECKDEC -eq 0 ] ; then
    if [ $YRCOUNT -gt 31 ] ; then
      echo $YRCOUNT
      if [ "$HIST" = "pop.h" ] && [ "$TPER" = "mon" ] ; then
        ./concatenate_data Y2D
        ./store_to_archive
      fi
      if [ "$HIST" = "cam2.h1" ] && [ "$TPER" = "day" ] ; then
        ./concatenate_data Y2D
        ./store_to_archive
      fi
    fi
  fi
done
#
# Concatenate months -> years, years -> all (if possible)
#
echo "Final concatenating of "$CASE"."$HIST" at "`date`
./concatenate_data M2Y
./concatenate_data Y2A
#
# Store completed data on archival system
#
./store_to_archive
if [ $? -ne 0 ] ; then
  echo "store_to_archive failed"
  ./procstat.sh error process_cm5_template
  exit 1
fi
echo "COMPLETE : procstat"
./procstat.sh complete
