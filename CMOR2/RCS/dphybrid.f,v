head	1.1;
access;
symbols;
locks;
comment	@c @;


1.1
date	2012.06.03.13.11.37;	author strandwg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@C NCLFORTSTART
      subroutine dphybrid (p0,hyai,hybi,psfc,mlon,nlat,klev,dphy)
      implicit none

c input
      integer  mlon, nlat, klev
      real     p0
     *   ,     hyai(klev), hybi(klev)
     *   ,     psfc(mlon,nlat)
c output
      real     dphy(mlon,nlat,klev-1)
C NCLEND
 
c NCL: dphy = dpres_hybrid_ccm (ps,p0,hyai,hybi)
c Note: dphy will have one less vertical level

c this routine interploates ccm2/3 hybrid coordinate data
c     to pressure coordinates. then it computes

c     formula for the pressure of a hybrid surface is;
c          phy(k) = hyai(k)*p0 + hybi(k)*psfc

c     input
c          hyai   - is the "a" or pressure hybrid coef
c          hybi   - is the "b" or sigma coeficient
c          p0     - is the base pressure in pascals [Pa]
c          psfc   - is the surface pressure in pascals [Pa]
c          mlon   - longitude dimension
c          nlat   - latitude  dimension
c          klev   - number of levels
c     output
c          dphy    - delta pressure [Pa; always positive]

c local
      integer kl, nl, ml
      real    pa, pb
         
      do nl=1,nlat
        do ml=1,mlon
         do kl=1,klev-1
            pa = p0*hyai(kl)   + hybi(kl  )*psfc(ml,nl)
            pb = p0*hyai(kl+1) + hybi(kl+1)*psfc(ml,nl)
            dphy(ml,nl,kl) = abs(pb-pa)
c c c       dphy(ml,nl,kl) = abs((hyai(kl+1)-hyai(kl))*p0
c c c*                     -     (hybi(kl+1)-hyai(kl))*psfc(ml,nl))  
         end do
        end do
      end do

      return
      end
@
