CASE=xxxCASExxx ; export CASE
HIST=xxxHISTxxx ; export HIST
TABL=xxxTABLxxx ; export TABL
VARS="xxxVARSxxx" ; export VARS
#
# Template for processing single-field CESM netCDF files into CMIP5 format
#
# Extract information from "experiments.txt"
#
#  Columns   Field
#   1 -  54  CCSM case name
#  55 -  74  model_id (CCSM4, CESM-CAM5, CESM-BGC, CESM-CHEM, CESM-WACCM, CESM1-CAM5.1-FV2, etc)
#  75 -  76  Location (NC = NCAR; NE = NERSC; OR = ORNL)
#  80 -  94  Official MIP name, or very brief description (N/A if not applicable)
#  95 - 104  RIP code (cm5) or realization number (cm3) (N/A if not applicable)
# 105 - 109  MIP (cm3 or cm5) experiment (N/A if not applicable)
# 110 - 149  RUN_REFCASE (parent case)
# 150 - 164  RUN_REFDATE (branch date, yyyy-mm-dd)
# 165 - 174  years of experiment (YYYY if unknown)
# 175 - 184  GRID (resolution)
# 185 - 204  COMPSET (N/A if not applicable)
# 205 - 224  REPOTAG (N/A if not applicable)
# 225 - 244  Calendar dates of simulation execution (yyyy/mm-yyyy/mm)
# 245 - 254  MACH (hardware)
# 255 - end  DOUT_L_MSROOT (history file location on archive)
#
EXPFILE=${HOME}/CCP_Processing_Suite/experiments.txt ; export EXPFILE
if [ -f $EXPFILE ] ; then
  LOCATION=`egrep "^$CASE " $EXPFILE | cut -c75-  | cut -d" " -f1`
   DESCRIP=`egrep "^$CASE " $EXPFILE | cut -c80-  | cut -d" " -f1`
   REALIZN=`egrep "^$CASE " $EXPFILE | cut -c95-  | cut -d" " -f1`
   MIPNAME=`egrep "^$CASE " $EXPFILE | cut -c105-  | cut -d" " -f1`
    PARENT=`egrep "^$CASE " $EXPFILE | cut -c110- | cut -d" " -f1`
    BRANCH=`egrep "^$CASE " $EXPFILE | cut -c150- | cut -d" " -f1`
   YEARBEG=`egrep "^$CASE " $EXPFILE | cut -c165-168`
   YEAREND=`egrep "^$CASE " $EXPFILE | cut -c170-173`
       RES=`egrep "^$CASE " $EXPFILE | cut -c175- | cut -d" " -f1`
   COMPSET=`egrep "^$CASE " $EXPFILE | cut -c185- | cut -d" " -f1`
   REPOTAG=`egrep "^$CASE " $EXPFILE | cut -c205- | cut -d" " -f1`
  HARDWARE=`egrep "^$CASE " $EXPFILE | cut -c245- | cut -d" " -f1`
  VARSBASE=/CCSM/csm
else
  echo "Cannot find $EXPFILE. EXIT"
  ./procstat.sh error process_cmip5_template
  exit 1
fi
#
if ! [ $LOCATION ] ; then
  echo "Unable to set variables because "$CASE" not found in $EXPFILE"
  ./procstat.sh error process_cmip5_template
  exit 1
fi
#
# Base directory for all CMIP5-related files
# Directory in which *_CMOR binaries reside
#
BASEDIR=${HOME}/CCP_Processing_Suite ; export BASEDIR
BINDIR=${HOME}/bin                   ; export BINDIR
SVNBIN=`which svn`                   ; export SVNBIN
#
# Acquire PROCHOST
#
PROCHOST=`hostname`;export PROCHOST
#
# resolve machine/site dependencies
#
case "$PROCHOST" in 
  silver* )                                # silver @ CGD/NCAR
    PROCBASE=/datalocal/proc/$USER/$CASE ; export PROCBASE
    DISK_BASE=/datalocal/proc             ; export DISK_BASE
    ARCHIVE_BASE=/CCSM/csm               ; export ARCHIVE_BASE
    SVN=https://proxy.subversion.ucar.edu/CCP_Processing_Suite ; export SVN
    if ! [ $LD_LIBRARY_PATH ] ; then
      LD_LIBRARY_PATH=/datalocal/ccpa/strandwg/software/uuid-1.6.2/lib 
    else
      LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/datalocal/ccpa/strandwg/software/uuid-1.6.2/lib 
    fi
    ;;

  modeling1* )                                # modeling1 in ACD
    PROCBASE=/data6/$USER/$CASE           ; export PROCBASE
    DISK_BASE=/data6                       ; export DISK_BASE
    ARCHIVE_BASE=/CCSM/csm                ; export ARCHIVE_BASE
    SVN=https://proxy.subversion.ucar.edu/CCP_Processing_Suite ; export SVN
    if ! [ $LD_LIBRARY_PATH ] ; then
      LD_LIBRARY_PATH=/data1/strandwg/software/uuid-1.6.2/lib
    else
      LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/data1/strandwg/software/uuid-1.6.2/lib
    fi
    ;;

  tramhill* | hurricane* )                 # tramhill/hurricane @ CGD/NCAR
    PROCBASE=/project/yampa01/$USER/$CASE ; export PROCBASE
    DISK_BASE=/project/yampa01             ; export DISK_BASE
    ARCHIVE_BASE=/CCSM/csm                ; export ARCHIVE_BASE
    SVN=https://proxy.subversion.ucar.edu/CCP_Processing_Suite ; export SVN
    if ! [ $LD_LIBRARY_PATH ] ; then
      LD_LIBRARY_PATH=/datalocal/ccpa/strandwg/software/uuid-1.6.2/lib 
    else
      LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/datalocal/ccpa/strandwg/software/uuid-1.6.2/lib 
    fi
    ;;

  mirage* )                                # DASG @ CISL/NCAR
    PROCBASE=/glade/scratch/$USER/$CASE             ; export PROCBASE
    DISK_BASE=/glade/p/cesm/outputdata/cases/$CASE  ; export DISK_BASE
    ARCHIVE_BASE=/CCSM/csm                          ; export ARCHIVE_BASE
    SVN=https://proxy.subversion.ucar.edu/CCP_Processing_Suite ; export SVN
    if ! [ $LD_LIBRARY_PATH ] ; then
      LD_LIBRARY_PATH=/contrib/lib:/glade/home/strandwg/lib:/fs/local/lib
    else
      LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/glade/home/strandwg/lib
    fi
    ;;
  * ) 
    echo "Unable to continue because "$PROCHOST" not known."
    ./procstat.sh error process_cmip5_template
    exit 1 ;;
esac
#
export LD_LIBRARY_PATH
#
# Build CMOR binary
#
echo "Building "${BINDIR}"/"${TABL}"_CMOR"
cd ${BASEDIR}/CMOR2
make ${TABL}"_CMOR"
#
# Locate XWALK file
#
case "$MIPNAME" in
  cm5 )
    XWALK=${BASEDIR}/CMOR2/Xwalks/xwalk_CMIP5_${TABL} ;;
  gmp )
    XWALK=${BASEDIR}/CMOR2/Xwalks/xwalk_GeoMIP_${TABL} ;;
  tmp )
    XWALK=${BASEDIR}/CMOR2/Xwalks/xwalk_TAMIP_${TABL} ;;
  * )
    echo "MIP name "${MIPNAME}" unknown. Stopping."
    exit 1 ;;
esac
if [ ! -f $XWALK ] ; then
  echo "xwalk file "${XWALK}" NOT found. Stopping."
  exit 1
else
  echo "xwalk file "${XWALK}" located."
fi
#
# Strip off first part of $HIST
#
HTYP=`echo $HIST | cut -d'.' -f1` ; export HTYP
#
# Convert history type to component name
#
case "$HTYP" in
  cam2 | cam )
    COMP_NAME=atm ;;
  clm2 ) 
    COMP_NAME=lnd ;;
  pop  ) 
    COMP_NAME=ocn ;;
  csim | cice ) 
    COMP_NAME=ice ;;
  * ) 
    echo "Unable to continue because "$HIST" not known."
    ./procstat.sh error process_cmip5_template
    exit 1 ;;
esac
#
# Set up local directory names and archival names
#
LOCAL_PROC=$PROCBASE/$TABL
ARCHIVE_PROC=$VARSBASE/$CASE/$COMP_NAME/proc/tseries
DISK_BASE=$DISK_BASE/$CASE/$COMP_NAME/proc/tseries
ARCHIVE_CMIP5=$ARCHIVE_BASE/CMIP5
#
# Location of single-field format files on archive
#
case "$TABL" in
  Amon | Lmon | OImon | Omon | LImon | cfMon | aero )
    ARCHIVE_PROC=${ARCHIVE_PROC}/monthly
    DISK_BASE=${DISK_BASE}/monthly  ;;
  day | cfDay )
    ARCHIVE_PROC=${ARCHIVE_PROC}/daily
    DISK_BASE=${DISK_BASE}/daily  ;;
  6hrLev | 6hrPlev )
    ARCHIVE_PROC=${ARCHIVE_PROC}/hourly6
    DISK_BASE=${DISK_BASE}/hourly6  ;;
  3hr | cf3hr )
    ARCHIVE_PROC=${ARCHIVE_PROC}/hourly3
    DISK_BASE=${DISK_BASE}/hourly3  ;;
  * ) 
    echo "Unable to continue because directory for "$TABL" not known."
    ./procstat.sh error process_cmip5_template
    exit 1 ;;
esac
#
# Variables that can be processed. Dependent on whether or not VARS exists
#
if [ "$VARS" ] ; then
  rm -f ./VARS_TO_DO
  for C5F in `echo $VARS` ; do
    egrep ":$C5F:" $XWALK | cut -d":" -f7 >> ./VARS_TO_DO
    cat ./VARS_TO_DO | sort | uniq > ./UVARS_TO_DO ; mv ./UVARS_TO_DO ./VARS_TO_DO
  done
else
  rm -f ./VARS_TO_DO
  for C5F in `cut -d":" -f7 $XWALK | sort | uniq` ; do
    echo $C5F >> ./VARS_TO_DO
  done
fi
#
cat ./VARS_TO_DO | sort | uniq | egrep -v "(UNKNOWN|UNAVAILABLE)" > ./tmp.VARS_TO_DO
mv ./tmp.VARS_TO_DO ./VARS_TO_DO
#
TEMPVARS=`cat ./VARS_TO_DO` ; rm -f ./VARS_TO_DO
CCSM_VARS=`echo $TEMPVARS | sed -e 's/ /,/g'`
#
CACHEDIR=${LOCAL_PROC}/data
#
# Print out values
#
echo "           Case name : "$CASE ; export CASE
echo "   History file type : "$HIST ; export HIST
echo "         CMIP5 table : CMIP5_"$TABL ; export TABL
echo "     Processed files : "$ARCHIVE_CMIP5  ; export ARCHIVE_CMIP5
if [ "$LOCATION" = "NC" ] ; then
  HARDWARE=${HARDWARE}".ucar.edu"
fi
if [ "$LOCATION" = "NE" ] ; then
  HARDWARE=${HARDWARE}".nersc.gov"
fi
if [ "$LOCATION" = "OR" ] ; then
  HARDWARE=${HARDWARE}".ccs.ornl.gov"
fi
echo "            Location : "$LOCATION ; export LOCATION
echo "         Description : "$DESCRIP  ; export DESCRIP
echo "     Realization/RIP : "$REALIZN  ; export REALIZN
echo "         Parent case : "$PARENT   ; export PARENT
echo "         Branch date : "$BRANCH   ; export BRANCH
echo "          Resolution : "$RES      ; export RES
echo "            Hardware : "$HARDWARE ; export HARDWARE
echo "             Compset : "$COMPSET  ; export COMPSET
echo "      Repository tag : "$REPOTAG  ; export REPOTAG
echo "          Begin year : "$YEARBEG  ; export YEARBEG
echo "            End year : "$YEAREND  ; export YEAREND
echo ""
echo "   Archival base dir : "$ARCHIVE_BASE  ; export ARCHIVE_BASE
echo ""
echo "     Processing host : "$PROCHOST      ; export PROCHOST
echo " Local history files : "$LOCAL_HIST    ; export LOCAL_HIST
echo "      Processing dir : "$LOCAL_PROC    ; export LOCAL_PROC
echo "   Archive cache dir : "$CACHEDIR      ; export CACHEDIR
echo "    Local disk cache : "${DISK_BASE}   ; export DISK_BASE
echo " Processing code dir : "$BASEDIR       ; export BASEDIR
echo "          Binary dir : "$BINDIR        ; export BINDIR
echo "         CMOR binary : "$BINDIR"/"${TABL}"_CMOR"
#  
if [ ! -d $LOCAL_PROC ] ; then 
  mkdir -p $LOCAL_PROC 
fi
if [ ! -d $CACHEDIR ] ; then 
  mkdir -p $CACHEDIR 
fi
cd $LOCAL_PROC
#
ln -s -f $BASEDIR/experiments.txt  .
ln -s -f $BASEDIR/archive_list         .
ln -s -f $BASEDIR/archive_var_read     .
ln -s -f $BASEDIR/archive_cmip5_write  .
ln -s -f $BASEDIR/CMOR2/RunCMOR    .
ln -s -f $BASEDIR/store_to_archive .
ln -s -f $BASEDIR/procstat.sh      .
#
ln -s -f $BINDIR/${TABL}_CMOR      .
#
cd $LOCAL_PROC
#
# Let 'er rip
#
echo "BEGIN : procstat"
./procstat.sh start
#
# Get archive listing
#
#cd $DISK_BASE
#ARCHIVE_LIST=archive.$CASE.$HIST.VARS
#if [ ! -f $ARCHIVE_LIST ] ; then
#  echo "Getting archival list of "$CASE" "$HIST
#  ../archive_list $ARCHIVE_LIST
#  if [ $? -ne 0 ] ; then
#    echo "Error from archive_list"
#    ./procstat.sh error archive_list
#    exit 1
#  fi
#fi
#
# Retrieve files from archive
#
if [ ! -d $DISK_BASE ] ; then
  mkdir -p $DISK_BASE
fi
#
cd $DISK_BASE
ln -s -f $BASEDIR/archive_var_read .
./archive_var_read $ARCHIVE_PROC $CCSM_VARS
if [ $? -ne 0 ] ; then
  echo "Error from archive_var_read"
  ./procstat.sh error archive_var_read
  exit 1
fi
#
# Run CMOR processor code
#
echo "CACHEDIR : "${CACHEDIR}
echo "DISK_BASE: "${DISK_BASE}
cd $CACHEDIR
ln -s -f ${DISK_BASE}/${CASE}.${HIST}*nc .
#
cd $LOCAL_PROC
if [ "$VARS" ] ; then
  echo $VARS
  ./RunCMOR $CASE $HIST $TABL "$VARS"
else
  ./RunCMOR $CASE $HIST $TABL
fi
#
# Store completed data on archival system
#
#./store_cmip5
#if [ $? -ne 0 ] ; then
#  echo "store_to_archive failed"
#  ./procstat.sh error store_to_archive
#  exit 1
#fi
echo "COMPLETE : procstat"
./procstat.sh complete
