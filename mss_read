#!/bin/sh
# Read file(s) from a archival system
#
if [ $# -ne 2 ] ; then
  echo "Usage: mss_read MSSLIST YEARNOW"
  echo "Requires MSSLIST and YEARNOW"
  echo "CASE HIST MSSHIST must be defined"
  exit 1
else
  MSSLIST=$1
  YEARNOW=$2
fi
#
if ! [ -f $MSSLIST ] ; then
  echo "mss_read: No "$MSSLIST" file found. Exit."
  exit 1
fi
if [ ! $CASE ] ; then
  echo "mss_read: CASE undefined. Exit."
fi
if [ ! $HIST ] ; then
  echo "mss_read: HIST undefined. Exit."
fi
if [ ! $MSSHIST ] ; then
  echo "mss_read: MSSHIST undefined. Exit."
fi
#
# Parse case and hist to deduce time(s) to read
#
TSTR=${CASE}.${HIST}
FLEN=`echo $TSTR | wc -c`
NDOT=0
CSTR=1
while [ $CSTR -le $FLEN ] ; do
  CURC=`echo $TSTR | cut -c${CSTR}-${CSTR}`
  if [ "$CURC" = "." ] ; then
     NDOT=`expr '(' $NDOT ')' '+' '1'`
  fi
  CSTR=`expr '(' $CSTR ')' '+' '1'`
done
NDOT=`expr '(' $NDOT ')' '+' '2'`
DAT=`egrep "${HIST}\.${YEARNOW}" $MSSLIST | cut -d"." -f${NDOT}-`
#
LST=`echo $DAT | sed -e "s/ /,/g"`
#
if [ "`echo $LST | cut -d"." -f2`" = "tar" ] ; then
  MSSFILES=$CASE.$HIST.${LST}
else
  MSSFILES=$CASE.$HIST."{"${LST}"}"
fi
#
# If NCAR MSS msrcp command exists, use it.
#
TEST4MSRCP=`which msrcp 2<&1`
if [ $? -eq 0 ] ; then
   MSRCP=`which msrcp`
   $MSRCP -overwrite sizemismatch mss:"$MSSHIST/$MSSFILES" .
   if [ $? -ne 0 ] ; then
     echo "Error on msrcp -overwrite sizemismatch mss:"$MSSHIST"/"$MSSFILES
     exit 1
   else
#
# Parse filename(s) and untar if necessary
#
     for FILE in `echo $MSSFILES` ; do
       FLEN=`echo $FILE | wc -c`
       NDOT=0
       CSTR=1
       while [ $CSTR -le $FLEN ] ; do
         CURC=`echo $FILE | cut -c${CSTR}-${CSTR}`
         if [ "$CURC" = "." ] ; then
           NDOT=`expr '(' $NDOT ')' '+' '1'`
         fi
         CSTR=`expr '(' $CSTR ')' '+' '1'`
       done
       NDOT=`expr '(' $NDOT ')' '+' '1'`
       CURC=`echo $FILE | cut -d "." -f${NDOT}-${NDOT}`
       if [ "$CURC" = "tar" ] ; then
         tar xf $FILE
         if [ $? -ne 0 ] ; then
           echo "tar extraction failed on "$FILE
           exit 1
         else
          rm -f  $FILE
         fi
       fi
     done
   fi
#
# If NERSC/ORNL hsi command exists, use it.
#
else
  TEST4HSI=`which hsi 2<&1`
  if [ $? -eq 0 ] ; then
    if [ `echo $LST | cut -d"." -f2` = "tar" ] ; then
      htar -x -f $MSSHIST/$MSSFILES
      if [ $? -ne 0 ] ; then
        hsi -q "get -U $MSSHIST/$MSSFILES"
        if [ $? -eq 0 ] ; then
          tar xf $MSSFILES
          if [ $? -ne 0 ] ; then
            echo "htar and tar extraction failed on "$MSSFILES
            exit 1
          else
            rm -f  $MSSFILES
          fi
        else
          echo "Error on hsi get of "$MSSHIST"/"$MSSFILES
          exit 1
        fi
      fi
    else
      hsi -q "get $MSSHIST/$MSSFILES" 2>&1
      if [ $? -ne 0 ] ; then
        echo "Error on hsi get of "$MSSHIST"/"$MSSFILES
        exit 1
      fi
    fi
  else
    echo "Neither msrcp nor hsi exist."
    exit 1
  fi
fi
