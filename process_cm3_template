   CASE=xxxCASExxx ; export CASE
   HIST=xxxHISTxxx ; export HIST
   TPER=xxxTPERxxx ; export TPER
DO_PROC=xxxPROCxxx ; export DO_PROC
DO_CMIP=xxxCMIPxxx ; export DO_CMIP
#
# Template for processing CCSM history netCDF files into single-field format 
# and/or CMIP format
#
# Extract information from "experiments.txt"
#
#  Columns   Field
#   1 -  45  CCSM case name
#  46 -  47  Location (NC = NCAR; NE = NERSC; OR = ORNL)
#  55 -  74  Very brief description and/or PCMDI name (N/A if not applicable)
#  75 -  76  Realization number (<=2 digits) (0 if not applicable)
#  80 -  82  Is a CMIP3 (cm3) or CMIP5 (cm5) experiment?
#  85 - 124  RUN_REFCASE (parent CCSM case)
# 130 - 139  RUN_REFDATE (branch date, yyyy-mm-dd)
# 145 - 148  Year began or YYYY if unknown
# 150 - 153  Year ended or YYYY if unknown
# 155-  174  GRID (resolution)
# 175 - 194  COMPSET (all "-" if missing)
# 195 - 224  REPOTAG (all "-" if missing)
# 225 - 239  MACH (hardware)
# 240 - end  DOUT_L_MSROOT (history file location on archive)
#

EXPFILE=${HOME}/CCP_Processing_Suite/experiments.txt ; export EXPFILE
if [ -f $EXPFILE ] ; then
  LOCATION=`egrep "^$CASE " $EXPFILE | cut -c46-  | cut -d" " -f1`
   DESCRIP=`egrep "^$CASE " $EXPFILE | cut -c55-  | cut -d" " -f1`
   REALIZN=`egrep "^$CASE " $EXPFILE | cut -c75-  | cut -d" " -f1`
      CMIP=`egrep "^$CASE " $EXPFILE | cut -c80-  | cut -d" " -f1`
    PARENT=`egrep "^$CASE " $EXPFILE | cut -c85-  | cut -d" " -f1`
    BRANCH=`egrep "^$CASE " $EXPFILE | cut -c130- | cut -d" " -f1`
   YEARBEG=`egrep "^$CASE " $EXPFILE | cut -c145- | cut -d" " -f1`
   YEAREND=`egrep "^$CASE " $EXPFILE | cut -c150- | cut -d" " -f1`
       RES=`egrep "^$CASE " $EXPFILE | cut -c155- | cut -d" " -f1`
   COMPSET=`egrep "^$CASE " $EXPFILE | cut -c175- | cut -d" " -f1`
   REPOTAG=`egrep "^$CASE " $EXPFILE | cut -c195- | cut -d" " -f1`
  HARDWARE=`egrep "^$CASE " $EXPFILE | cut -c225- | cut -d" " -f1`
  HISTBASE=`egrep "^$CASE " $EXPFILE | cut -c240- | cut -d" " -f1`
else
  echo "Cannot find $EXPFILE. EXIT"
#
# ASB - procstat
#
  ./procstat.sh error process_cm3_template
  exit 1
fi
#
if ! [ $LOCATION ] ; then
  echo "Unable to set variables because "$CASE" not found in $EXPFILE"
#
# ASB - procstat
#
  ./procstat.sh error process_cm3_template
  exit 1
fi
#
YRCOUNT=`expr '(' $YEAREND '-' $YEARBEG ')' '+' '1'`
MNCOUNT=`expr '(' '(' $YEAREND '-' $YEARBEG ')' '+' '1' ')' '*' '12'`
#
# Processed data archival locations
#
case "$LOCATION" in
  NC )                                        # NCAR experiments
    ARCHIVE_BASE=/CCSM/csm/$CASE ;;
  NE )                                        # NERSC experiments
    ARCHIVE_BASE=/nersc/mp9/strandwg/CCSM/csm/$CASE ;;
  OR )                                        # ORNL experiments
    ARCHIVE_BASE=/f2/ccsm/csm/$CASE ;;
  * )
    echo "Unable to set variables because "$LOCATION" not found in "$EXPFILE
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1 ;;
esac
#
# Check PROCHOST against LOCATION
#
PROCHOST=`hostname`;export PROCHOST
#
case "$LOCATION" in
  NE )
    case "$PROCHOST" in
      euclid* )
        ;;
      * )
        echo "Add "$PROCHOST" for location "$LOCATION
#
# ASB - procstat
#
        ./procstat.sh error process_cm3_template
        exit 1
     esac ;;
  NC ) 
    case "$PROCHOST" in
      copper* | breeze* | gale* | gust* | hail* | tramhill* | mirage* | hurricane* )
        ;;
      * )
        echo "Add "$PROCHOST" for location "$LOCATION
#
# ASB - procstat
#
        ./procstat.sh error process_cm3_template
        exit 1
      esac ;;
  OR ) 
    case "$PROCHOST" in
      lens* )
        ;;
      * )
        echo "Add "$PROCHOST" for location "$LOCATION
#
# ASB - procstat
#
        ./procstat.sh error process_cm3_template
        exit 1
      esac ;;
  * ) 
    echo "Unable to continue because "$LOCATION" not known."
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1 ;;
esac
#
# Strip off first part of $HIST
#
HTYP=`echo $HIST | cut -d'.' -f1` ; export HTYP
#
# File archival locations
#
case "$HTYP" in
  cam2 )
    ARCHIVE_HIST=$HISTBASE/$CASE/atm/hist
    ARCHIVE_CMIP=$ARCHIVE_BASE/atm/ipcc/tseries
    ARCHIVE_PROC=$ARCHIVE_BASE/atm/proc/tseries  ;;
  clm2 ) 
    ARCHIVE_HIST=$HISTBASE/$CASE/lnd/hist
    ARCHIVE_CMIP=$ARCHIVE_BASE/lnd/ipcc/tseries
    ARCHIVE_PROC=$ARCHIVE_BASE/lnd/proc/tseries  ;;
  pop  ) 
    ARCHIVE_HIST=$HISTBASE/$CASE/ocn/hist
    ARCHIVE_CMIP=$ARCHIVE_BASE/ocn/ipcc/tseries
    ARCHIVE_PROC=$ARCHIVE_BASE/ocn/proc/tseries  ;;
  csim ) 
    ARCHIVE_HIST=$HISTBASE/$CASE/ice/hist
    ARCHIVE_CMIP=$ARCHIVE_BASE/ice/ipcc/tseries
    ARCHIVE_PROC=$ARCHIVE_BASE/ice/proc/tseries  ;;
  cice ) 
    ARCHIVE_HIST=$HISTBASE/$CASE/ice/hist
    ARCHIVE_CMIP=$ARCHIVE_BASE/ice/ipcc/tseries
    ARCHIVE_PROC=$ARCHIVE_BASE/ice/proc/tseries  ;;
  * ) 
    echo "Unable to continue because "$HIST" not known."
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1 ;;
esac
#
case "$TPER" in
  mon )
    ARCHIVE_CMIP=${ARCHIVE_CMIP}/monthly
    ARCHIVE_PROC=${ARCHIVE_PROC}/monthly  ;;
  day )
    ARCHIVE_CMIP=${ARCHIVE_CMIP}/daily
    ARCHIVE_PROC=${ARCHIVE_PROC}/daily    ;;
  hr6 )
    ARCHIVE_CMIP=${ARCHIVE_CMIP}/hourly6
    ARCHIVE_PROC=${ARCHIVE_PROC}/hourly6  ;;
  hr3 )
    ARCHIVE_CMIP=${ARCHIVE_CMIP}/hourly3
    ARCHIVE_PROC=${ARCHIVE_PROC}/hourly3  ;;
  * ) 
    echo "Unable to continue because "$TPER" not known."
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1 ;;
esac
#
# resolve machine/site dependencies
#
case "$PROCHOST" in 
  copper* )                                # copper @ CGD/NCAR
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/usr/local/bin/ncks         ; export NCKS
    NCRCAT=/usr/local/bin/ncrcat     ; export NCRCAT
    NCARG_ROOT=/contrib/ncarg            ; export NCARG_ROOT
    PROCBASE=/datalocal/proc/$USER/$CASE ; export PROCBASE
    if [ $DO_CMIP -ne 0 ] ; then
      if [ "$HTYP" == "pop" ] || [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
        REGRDIR=/project/ccr/strandwg/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
        NAMLDIR=$BASEDIR/regridding                            ; export NAMLDIR
        if [ "$HTYP" == "pop" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ocn_rgd.copper.cgd.ucar.edu ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
        if [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ice_rgd.copper.cgd.ucar.edu ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
      fi
    fi ;;

  tramhill* | hurricane* )                                # tramhill/hurricane @ CGD/NCAR
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/usr/local/bin/ncks         ; export NCKS
    NCRCAT=/usr/local/bin/ncrcat     ; export NCRCAT
    NCARG_ROOT=/contrib/ncarg            ; export NCARG_ROOT
    PROCBASE=/project/yampa01/$USER/$CASE ; export PROCBASE
    if [ $DO_CMIP -ne 0 ] ; then
      if [ "$HTYP" == "pop" ] || [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
        REGRDIR=/project/ccr/strandwg/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
        NAMLDIR=$BASEDIR/regridding                            ; export NAMLDIR
        if [ "$HTYP" == "pop" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ocn_rgd.copper.cgd.ucar.edu ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
        if [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ice_rgd.copper.cgd.ucar.edu ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
      fi
    fi ;;

  breeze* | gale* | gust* | hail* | mirage* )                                # DASG @ CISL/NCAR
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/fs/local/bin/ncks         ; export NCKS
    NCRCAT=/fs/local/bin/ncrcat     ; export NCRCAT
    NCARG_ROOT=/fs/local/apps/ncl-5.2.0            ; export NCARG_ROOT
    PROCBASE=/ptmp/$USER/$CASE ; export PROCBASE
    if [ $DO_CMIP -ne 0 ] ; then
      if [ "$HTYP" == "pop" ] || [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
        REGRDIR=/project/ccr/strandwg/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
        NAMLDIR=$BASEDIR/regridding                            ; export NAMLDIR
        if [ "$HTYP" == "pop" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ocn_rgd.copper.cgd.ucar.edu ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
        if [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ice_rgd.copper.cgd.ucar.edu ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
      fi
    fi ;;

  euclid* )                                # euclid @ NERSC
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/global/u2/s/strandwg/bin/ncks     ; export NCKS
    NCRCAT=/global/u2/s/strandwg/bin/ncrcat ; export NCRCAT
    NCARG_ROOT=/usr/common/usg/ncar/5.2.0          ; export NCARG_ROOT
    PROCBASE=/global/scratch/sd/$USER/$CASE      ; export PROCBASE
    if [ $DO_CMIP -ne 0 ] ; then
      if [ "$HTYP" == "pop" ] || [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
        REGRDIR=/nersc/mp9/strandwg/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
        NAMLDIR=$BASEDIR/regridding                               ; export NAMLDIR
        if [ "$HTYP" == "pop" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ocn_rgd.euclid ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
        if [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ice_rgd.euclid ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
      fi
    fi ;;

  lens* )                                # lens @ ORNL
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCKS=/ccs/home/wgstrand/bin/ncks                   ; export NCKS
    NCRCAT=/ccs/home/wgstrand/bin/ncrcat               ; export NCRCAT
    NCARG_ROOT=/sw/analysis-x64/ncl/5.0.0/sl5.0_binary ; export NCARG_ROOT
    PROCBASE=/tmp/work/$USER/$CASE                     ; export PROCBASE
    if [ $DO_CMIP -ne 0 ] ; then
      if [ "$HTYP" == "pop" ] || [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
        REGRDIR=/f2/wgstrand/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
        NAMLDIR=$BASEDIR/regridding                        ; export NAMLDIR
        if [ "$HTYP" == "pop" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ocn_rgd.lens0   ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
        if [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
          REGRID=$BASEDIR/regridding/ccsm_ice_rgd.lens0   ; export REGRID
          if [ ! -f $REGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
#
# ASB - procstat
#
            ./procstat.sh error process_cm3_template
            exit 1
          fi
        fi
      fi
    fi ;;
  * ) 
    echo "Unable to continue because "$PROCHOST" not known."
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1 ;;
esac
#
case "$HTYP" in
  cam2 ) PROCDIR=$PROCBASE/atm ;;
  clm2 ) PROCDIR=$PROCBASE/lnd ;;
  pop  ) PROCDIR=$PROCBASE/ocn ;;
  csim ) PROCDIR=$PROCBASE/ice ;;
  cice ) PROCDIR=$PROCBASE/ice ;;
  * ) 
    echo "Unable to continue because "$HIST" not known."
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1 ;;
esac
#
# For CMIP processing, get NCL script name
#
if [ $DO_CMIP -ne 0 ] ; then
  NCL=${NCARG_ROOT}/bin/ncl ; export NCL
  NCL_VERSION=`$NCL -V`     ; export NCL_VERSION
 case "$HTYP" in
    cam2 ) 
      case "$TPER" in
        mon ) NCL_SCRIPT=CCSM_atmm_${CMIP}.ncl ;;
        day ) NCL_SCRIPT=CCSM_atmd_${CMIP}.ncl ;;
        hr6 ) NCL_SCRIPT=CCSM_atm6_${CMIP}.ncl ;;
        hr3 ) NCL_SCRIPT=CCSM_atm3_${CMIP}.ncl ;;
        *   ) 
          echo "Unable to continue because "$TPER" not known for NCL_SCRIPT."
#
# ASB - procstat
#
          ./procstat.sh error process_cm3_template
          exit 1 ;;
      esac ;;
    clm2 ) 
      case "$TPER" in
        mon ) NCL_SCRIPT=CCSM_lndm_${CMIP}.ncl ;;
        day ) NCL_SCRIPT=CCSM_lndd_${CMIP}.ncl ;;
        hr6 ) NCL_SCRIPT=CCSM_lnd6_${CMIP}.ncl ;;
        hr3 ) NCL_SCRIPT=CCSM_lnd3_${CMIP}.ncl ;;
        *   ) 
          echo "Unable to continue because "$TPER" not known for NCL_SCRIPT."
#
# ASB - procstat
#
          ./procstat.sh error process_cm3_template
          exit 1 ;;
      esac ;;
    pop  ) 
      case "$TPER" in
        mon ) NCL_SCRIPT=CCSM_ocnm_${CMIP}.ncl ;;
        day ) NCL_SCRIPT=CCSM_ocnd_${CMIP}.ncl ;;
        hr6 ) NCL_SCRIPT=CCSM_ocn6_${CMIP}.ncl ;;
        hr3 ) NCL_SCRIPT=CCSM_ocn3_${CMIP}.ncl ;;
        *   ) 
          echo "Unable to continue because "$TPER" not known for NCL_SCRIPT."
#
# ASB - procstat
#
          ./procstat.sh error process_cm3_template
          exit 1 ;;
      esac ;;
    cice | csim  ) 
      case "$TPER" in
        mon ) NCL_SCRIPT=CCSM_icem_${CMIP}.ncl ;;
        day ) NCL_SCRIPT=CCSM_iced_${CMIP}.ncl ;;
        hr6 ) NCL_SCRIPT=CCSM_ice6_${CMIP}.ncl ;;
        hr3 ) NCL_SCRIPT=CCSM_ice3_${CMIP}.ncl ;;
        *   ) 
          echo "Unable to continue because "$TPER" not known for NCL_SCRIPT."
#
# ASB - procstat
#
          ./procstat.sh error process_cm3_template
          exit 1 ;;
      esac ;;
    *   ) 
      echo "Unable to continue because "$HTYP" not known for NCL_SCRIPT."
#
# ASB - procstat
#
      ./procstat.sh error process_cm3_template
      exit 1 ;;
  esac
  export NCL_SCRIPT
  if [ ! -f ${BASEDIR}/${NCL_SCRIPT} ] ; then
    echo "Unable to continue because "${BASEDIR}/${NCL_SCRIPT}" not found."
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1
  fi
fi
#
PROCDIR=${PROCDIR}/${TPER}
CACHEDIR=${PROCDIR}/to_archive
#
# Print out values
#
echo "           Case name : "$CASE ; export CASE
echo "   History file type : "$HIST ; export HIST
echo ""
if [ $DO_PROC -ne 0 ] ; then
  echo "   by var processing : YES"
else
  echo "   by var processing : NO"
fi
echo "                ncks : "$NCKS
echo "              ncrcat : "$NCRCAT
echo "             ncatted : "$NCATTED
echo ""
if [ $DO_CMIP -ne 0 ] ; then
  echo "     CMIP processing : YES"
  echo "                 NCL : "$NCL
  echo "         NCL version : "$NCL_VERSION
  echo "     NCL script name : "$NCL_SCRIPT
  if [ "$HTYP" == "pop" ] || [ "$HTYP" == "csim" ] || [ "$HTYP" == "cice" ] ; then
    echo "regridding directory : "$REGRDIR
    echo "   regridding binary : "$REGRID
  fi
else
  echo "     CMIP processing : NO"
fi
if [ "$LOCATION" = "NC" ] ; then
  HARDWARE=${HARDWARE}".ucar.edu"
fi
if [ "$LOCATION" = "NE" ] ; then
  HARDWARE=${HARDWARE}".nersc.gov"
fi
if [ "$LOCATION" = "OR" ] ; then
  HARDWARE=${HARDWARE}".ccs.ornl.gov"
fi
echo "            Location : "$LOCATION ; export LOCATION
echo "         Description : "$DESCRIP  ; export DESCRIP
echo "         Realization : "$REALIZN  ; export REALIZN
if [ "$CMIP" != "---" ] ; then
  echo "         CMIP version: "$CMIP     ; export CMIP
fi
echo "         Parent case : "$PARENT   ; export PARENT
echo "         Branch date : "$BRANCH   ; export BRANCH
echo "          Resolution : "$RES      ; export RES
echo "            Hardware : "$HARDWARE ; export HARDWARE
echo "          Begin year : "$YEARBEG  ; export YEARBEG
echo "            End year : "$YEAREND  ; export YEAREND
echo "          Year count : "$YRCOUNT  ; export YRCOUNT
echo "        Months count : "$MNCOUNT  ; export MNCOUNT
echo ""
echo "       History files : "$ARCHIVE_HIST  ; export ARCHIVE_HIST
echo "       History names : "$HIST     ; export HIST
echo "   Archival base dir : "$ARCHIVE_BASE  ; export ARCHIVE_BASE
echo "   CMIP format files : "$ARCHIVE_CMIP  ; export ARCHIVE_CMIP
echo "     Processed files : "$ARCHIVE_PROC  ; export ARCHIVE_PROC
echo ""
echo "     Processing host : "$PROCHOST ; export PROCHOST
echo "      Processing dir : "$PROCDIR  ; export PROCDIR
echo "   Archive cache dir : "$CACHEDIR ; export CACHEDIR
echo " Processing code dir : "$BASEDIR  ; export BASEDIR
#  
if [ ! -d $PROCDIR ] ; then 
  mkdir -p $PROCDIR 
fi
if [ ! -d $CACHEDIR ] ; then 
  mkdir -p $CACHEDIR 
fi
cd $PROCDIR
#
if [ $DO_CMIP -ne 0 ] ; then
  if [ ! -f ${BASEDIR}/${NCL_SCRIPT} ] ; then
    echo "Unable to continue because "$NCL_SCRIPT" not found."
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1
  fi
#
  if [ ! -d $PROCDIR/CMIP ] ; then
     mkdir -p $PROCDIR/CMIP
  fi
  if [ "$TPER" != "mon" ] ; then
    ln -s -f $BASEDIR/time_split    .
    ln -s -f $BASEDIR/days_to_month .
  fi
  if [ "$HTYP" = "pop" ] ; then
    ln -s -f $REGRID ccsm_ocn_regrid
  fi
  if [ "$HTYP" = "csim" ] || [ "$HTYP" = "cice" ] ; then
    ln -s -f $REGRID ccsm_ice_regrid
  fi
  if [ "$HTYP" = "pop" ] || [ "$HTYP" = "csim" ] || [ "$HTYP" = "cice" ] ; then
    ln -s -f $BASEDIR/regrid_data .
    mkdir -p $PROCDIR/maps
    cd $PROCDIR/maps
    if [ "$LOCATION" = "NC" ] ; then
      ln -s -f $REGRDIR/*T*.nc .
      ln -s -f $REGRDIR/*U*.nc .
    else
      if [ "$HTYP" = "pop" ] ; then
        if [ `ls map_gx1v3_k*nc | wc -l` -ne 80 ] ; then
          hsi -q "cd $REGRDIR ; get *T*nc"
          hsi -q "cd $REGRDIR ; get *U*nc"
        fi
      fi
      if [ "$HTYP" = "csim" ] || [ "$HTYP" = "cice" ] ; then
        if [ `ls map_gx1v3_k01*nc | wc -l` -ne 2 ] ; then
          hsi -q "cd $REGRDIR ; get *k01*T*nc"
          hsi -q "cd $REGRDIR ; get *k01*U*nc"
        fi
      fi
    fi
  fi
  cd $PROCDIR
  ln -s -f $BASEDIR/create_cm3_data     .
  ln -s -f ${BASEDIR}/${NCL_SCRIPT}     .
  ln -s -f $BASEDIR/attributes_ccsm.ncl .
  ln -s -f $BASEDIR/mss_list   .
  ln -s -f $BASEDIR/mss_read   .
  ln -s -f $BASEDIR/mss_write  .
  cd $PROCDIR/CMIP
  ln -s -f $BASEDIR/mss_list   .
  ln -s -f $BASEDIR/mss_read   .
  ln -s -f $BASEDIR/mss_write  .
  ln -s -f $BASEDIR/cm3_var_mon_to_year .
  ln -s -f $BASEDIR/cm3_var_year_to_all .
  cd $PROCDIR
fi
#
if [ $DO_PROC -ne 0 ] ; then
  if [ "$TPER" != "mon" ] ; then
    ln -s -f $BASEDIR/time_split    .
    ln -s -f $BASEDIR/days_to_month .
  fi
  ln -s -f $BASEDIR/mss_list   .
  ln -s -f $BASEDIR/mss_read   .
  ln -s -f $BASEDIR/mss_write  .
  ln -s -f $BASEDIR/var_split  .
  ln -s -f $BASEDIR/var_mon_to_year .
  ln -s -f $BASEDIR/var_year_to_dec .
  ln -s -f $BASEDIR/var_year_to_5yr .
  ln -s -f $BASEDIR/var_year_to_all .
fi
#
ln -s -f $BASEDIR/concatenate_data    .
ln -s -f $BASEDIR/store_to_archive    .
ln -s -f $BASEDIR/procstat.sh         .
#
CURDIR=$PWD
#
cd $PROCDIR
YEARNOW=$YEARBEG;export YEARNOW
#
# ASB - procstat
#
echo "BEGIN : procstat"
./procstat.sh start
#
ARCHIVE_LIST=ARCHIVE_.$CASE.$HIST
if [ ! -f $ARCHIVE_LIST ] ; then
  echo "Getting archival list of "$CASE" "$HIST
  ./mss_list $ARCHIVE_LIST
fi
#
while [ $YEARNOW -le $YEAREND ] ; do
#
# ASB - procstat
#
  ./procstat.sh

  YRCHECK=.comp.$CASE.$HIST.$YEARNOW
  if [ ! -f $YRCHECK ] ; then
    echo "Processing "$CASE"."$HIST"."$YEARNOW" at "`date`
    ./mss_read $ARCHIVE_LIST $YEARNOW
    if [ $? -ne 0 ] ; then
      echo "Error from mss_read"
#
# ASB - procstat
#
      ./procstat.sh error process_cm3_template
      exit 1
    else
      if [ "$HIST" != "cam2.h1" ] ; then
        for FILE in `ls $CASE.$HIST.${YEARNOW}-??.nc` ; do
          if [ $DO_CMIP -ne 0 ] ; then
            if [ "$HTYP" = "pop" ] || [ "$HTYP" = "csim" ] || [ "$HTYP" = "cice" ] ; then
              ./regrid_data $FILE
              if [ $? -ne 0 ] ; then
                echo "Error from regrid_data on file "$FILE
#
# ASB - procstat
#
                ./procstat.sh error process_cm3_template
                exit 1
              else
                for FINT in `ls $CASE.$HIST.*.${YEARNOW}-??.nc` ; do
                  ./create_cm3_data $FINT
                  if [ $? -ne 0 ] ; then
                    echo "Error from create_cm3_data on file "$FINT
#
# ASB - procstat
#
                    ./procstat.sh error process_cm3_template
                    exit 1
                  else
                    rm -f $FINT
                  fi
                done
                touch .cmip.$FILE
                if [ $DO_PROC -eq 0 ] ; then
                  rm -f $FILE
                fi
              fi
            else
              ./create_cm3_data $FILE
              if [ $? -ne 0 ] ; then
                echo "Error from create_cm3_data on file "$FILE
#
# ASB - procstat
#
                ./procstat.sh error process_cm3_template
                exit 1
              else
                touch .cmip.$FILE
                if [ $DO_PROC -eq 0 ] ; then
                  rm -f $FILE
                fi
              fi
            fi
          fi
          if [ $DO_PROC -ne 0 ] ; then
            ./var_split $FILE erase
            if [ $? -ne 0 ] ; then
              echo "Error from var_split on file "$FILE
#
# ASB - procstat
#
              ./procstat.sh error process_cm3_template
              exit 1
            else
              touch .proc.$FILE
            fi
          fi
          if [ -f .proc.$FILE ] || [ -f .cmip.$FILE ] ; then
            touch .comp.$FILE
            rm -f .proc.$FILE .cmip.$FILE
          fi
        done
      else
        for FILE in `ls $CASE.$HIST.${YEARNOW}-??-??-?????.nc` ; do
          ./time_split $FILE erase
        done
        ./days_to_month erase
        for FILE in `ls $CASE.$HIST.????-??.nc` ; do
          if [ $DO_CMIP -ne 0 ] ; then
            ./create_cm3_data $FILE
            if [ $? -ne 0 ] ; then
              echo "Error from create_cm3_data on file "$FILE
#
# ASB - procstat
#
              ./procstat.sh error process_cm3_template
              exit 1
            else
              touch .cmip.$FILE
            fi
            if [ $DO_PROC -eq 0 ] ; then
              rm -f $FILE
            fi
          fi
          if [ $DO_PROC -ne 0 ] ; then
            ./var_split $FILE erase
            if [ $? -ne 0 ] ; then
              echo "Error from var_split on file "$FILE
#
# ASB - procstat
#
              ./procstat.sh error process_cm3_template
              exit 1
            else
              touch .proc.$FILE
            fi
          fi
          if [ -f .proc.$FILE ] || [ -f .cmip.$FILE ] ; then
            touch .comp.$FILE
          fi
        done
      fi
    fi
    if [ `ls .comp.$CASE.$HIST.${YEARNOW}-??.nc | wc -l` -eq 12 ] ; then
      touch $YRCHECK
      rm .????.$CASE.$HIST.${YEARNOW}-??.nc
    fi
  fi
  CHECKDEC=`expr $YEARNOW % 10`
  if [ $CHECKDEC -eq 0 ] ; then
    echo "Concatenating years at "${YEARNOW}" at "`date`
    ./concatenate_data Y
  fi
  if [ "$HIST" = "pop.h" ] && [ "$TPER" = "mon" ] ; then
    ./concatenate_data D
    ./store_to_archive &
  fi
  if [ "$HIST" = "cam2.h1" ] && [ "$TPER" = "day" ] ; then
    ./concatenate_data D
    ./store_to_archive &
  fi
  YEARNOW=`expr $YEARNOW + 1`;export YEARNOW
done
#
# Concatenate years -> all (if possible)
#
echo "Final concatenating of "$CASE"."$HIST" at "`date`
./concatenate_data Y
if [ $? -eq 0 ] ; then
  ./concatenate_data A
  if [ $? -eq 0 ] ; then
    if [ "$HIST" = "pop.h" ] ; then
      if [ "$YEAREND" = "2100" ] || [ "$YEAREND" = "2005" ] || [ "$YEAREND" = "2060" ] ; then
        ./concatenate_data $YEAREND
        if [ $? -ne 0 ] ; then
          echo "concatenate_data "${YEAREND}" failed"
#
# ASB - procstat
#
          ./procstat.sh error process_cm3_template
          exit 1
        fi
      fi
    fi
  else
    echo "concatenate_data A failed"
#
# ASB - procstat
#
    ./procstat.sh error process_cm3_template
    exit 1
  fi
else
  echo "concatenate_data Y failed"
#
# ASB - procstat
#
  ./procstat.sh error process_cm3_template
  exit 1
fi
#
# Store completed data on archival system
#
./store_to_archive
if [ $? -ne 0 ] ; then
  echo "store_to_archive failed"
#
# ASB - procstat
#
  ./procstat.sh error process_cm3_template
  exit 1
fi
#
# ASB - procstat
#
echo "COMPLETE : procstat"
./procstat.sh complete


