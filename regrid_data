#!/bin/sh
#
# Regrid CCSM POP/CSIM data to regular-ish grid using SCRIP weights (predefined)
#
if [ $# -ne 1 ] ; then
  echo "Usage: regrid_data file"
  ./procstat.sh error regrid_data
  exit 1
else
  FILE=$1
  if [ ! -f $FILE ] ; then
    echo "regrid_data: "$FILE" does not exist. Exit."
    ./procstat.sh error regrid_data
    exit 1
  fi
fi
#
# Parse filename
#
FLEN=`echo $FILE | wc -c`
NDOT=0
CSTR=1
while [ $CSTR -le $FLEN ] ; do
  CURC=`echo $FILE | cut -c${CSTR}-${CSTR}`
  if [ "$CURC" = "." ] ; then
     NDOT=`expr '(' $NDOT ')' '+' '1'`
  fi
  CSTR=`expr '(' $CSTR ')' '+' '1'`
done
IDOT=1
DPFX=1
DSFX=1
while [ $IDOT -le $NDOT ] ; do
  CURC=`echo $FILE | cut -d "." -f${IDOT}-${IDOT}`
  case "$CURC" in
    cam2 )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
    clm2 )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
    pop )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
    csim )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
    cice )
      DPFX=`expr '(' $IDOT ')' '+' '1'`
      DSFX=`expr '(' $DPFX ')' '+' '1'` ;;
  esac
  IDOT=`expr '(' $IDOT ')' '+' '1'`
done
F_COMP=`expr '(' $DPFX ')' '-' '1'`
F_TIME=${DSFX}
#
COMP=`echo $FILE | cut -d"." -f${F_COMP}`
TVAL=`echo $FILE | cut -d"." -f${F_TIME}`
#
# POP regrid
#
if [ "$COMP" = "pop" ] ; then
  rm -f input_nml_T input_nml_U input_nml_1
  ln -s -f $NAMLDIR/NML_ccsm_ocn_? .
  cat NML_ccsm_ocn_1 | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_1
  cat NML_ccsm_ocn_T | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_T
  cat NML_ccsm_ocn_U | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_U
  ./ccsm_ocn_regrid < input_nml_1 2>&1 > /dev/null
  if [ $? -eq 0 ] ; then
    ./ccsm_ocn_regrid < input_nml_T 2>&1 > /dev/null
    if [ $? -eq 0 ] ; then
      ./ccsm_ocn_regrid < input_nml_U 2>&1 > /dev/null
      if [ $? -eq 0 ] ; then
        echo "regrid_data ocn COMPLETE"
      else
        echo "regrid_data ocn U regrid FAILED on "${FILE}
	./procstat.sh error regrid_data
        exit 1
      fi
    else
      echo "regrid_data ocn T regrid FAILED on "${FILE}
      ./procstat.sh error regrid_data
      exit 1
    fi
  else
    echo "regrid_data ocn 1 regrid FAILED on "${FILE}
    ./procstat.sh error regrid_data
    exit 1
  fi
fi
#
# CSIM regrid
#
if [ "$COMP" = "csim" ] ; then
  rm -f input_nml_T input_nml_U
  ln -s -f $NAMLDIR/NML_ccsm_ice_? .
  cat NML_ccsm_ice_T | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_T
  cat NML_ccsm_ice_U | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_U
  ./ccsm_ice_regrid < input_nml_T 2>&1 > /dev/null
  if [ $? -eq 0 ] ; then
    ./ccsm_ice_regrid < input_nml_U 2>&1 > /dev/null
    if [ $? -eq 0 ] ; then
      echo "regrid_data ice COMPLETE"
    else
      echo "regrid_data U ice regrid FAILED on "${FILE}
      ./procstat.sh error regrid_data
      exit 1
    fi
  else
    echo "regrid_data T ice regrid FAILED on "${FILE}
    ./procstat.sh error regrid_data
    exit 1
  fi
fi
#
