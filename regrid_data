#!/bin/sh
#
# Regrid CCSM POP/CSIM data to regular-ish grid using SCRIP weights (predefined)
#
if [ $# -ne 1 ] ; then
  echo "Usage: regrid_data file"
  exit 1
else
  FILE=$1
  if [ ! -f $FILE ] ; then
    echo "regrid_data: "$FILE" does not exist. Exit."
    exit 1
  fi
fi
#
CHEK=`echo $FILE | cut -d"." -f3 | cut -c1-2 | uniq`
if [ "$CHEK" = "ES" ] ; then
  F_COMP=4 ; F_TIME=6
else
  F_COMP=3 ; F_TIME=5
fi
COMP=`echo $FILE | cut -d"." -f${F_COMP}`
TVAL=`echo $FILE | cut -d"." -f${F_TIME} | cut -d"." -f1`
#
# POP regrid
#
if [ "$COMP" = "pop" ] ; then
  rm -f input_nml_T input_nml_U input_nml_1
  ln -s -f $NAMLDIR/NML_ccsm_ocn_? .
  cat NML_ccsm_ocn_1 | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_1
  cat NML_ccsm_ocn_T | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_T
  cat NML_ccsm_ocn_U | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_U
  $OREGRID < input_nml_1
  if [ $? -eq 0 ] ; then
    $OREGRID < input_nml_T
    if [ $? -eq 0 ] ; then
      $OREGRID < input_nml_U
      if [ $? -eq 0 ] ; then
        echo "regrid_data ocn COMPLETE"
      else
        echo "regrid_data ocn U regrid FAILED"
        exit 1
      fi
    else
      echo "regrid_data ocn T regrid FAILED"
      exit 1
    fi
  else
    echo "regrid_data ocn 1 regrid FAILED"
    exit 1
  fi
fi
#
# CSIM regrid
#
if [ "$COMP" = "csim" ] ; then
  rm -f input_nml_T input_nml_U
  ln -s -f $NAMLDIR/NML_ccsm_ice_? .
  cat NML_ccsm_ice_T | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_T
  cat NML_ccsm_ice_U | sed -e "s/CASE/${CASE}/g" | \
                       sed -e "s/TTTT/${TVAL}/g" > input_nml_U
  $IREGRID < input_nml_T
  if [ $? -eq 0 ] ; then
    $IREGRID < input_nml_U
    if [ $? -eq 0 ] ; then
      echo "regrid_data ice COMPLETE"
    else
      echo "regrid_data U ice regrid FAILED"
      exit 1
    fi
  else
    echo "regrid_data T ice regrid FAILED"
    exit 1
  fi
fi
#
