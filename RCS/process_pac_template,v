head	1.1;
access;
symbols;
locks;
comment	@# @;


1.1
date	2016.04.11.22.22.30;	author strandwg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@CASE=xxxCASExxx ; export CASE
HIST=xxxHISTxxx ; export HIST
TPER=xxxTPERxxx ; export TPER
#
echo -n "TS START: " ; date
#
# Template for processing large ensemble CESM history netCDF files into single-field format 
#
# Extract relevant information from "experiments.txt"
#
#  Columns   Field
#   1 -  54  CCSM case name
# 105 - 109  MIP (cm3 or cm5) experiment (N/A if not applicable)
# 110 - 149  RUN_REFCASE (parent case)
# 150 - 164  RUN_REFDATE (branch date, yyyy-mm-dd)
# 165 - 174  years of experiment (YYYY if unknown)
# 165 - 174  run years of experiment (YYYY if unknown)
# 175 - 184  CMIP5-requested years
# 185 - 194  GRID (resolution)
# 195 - 214  COMPSET (N/A if not applicable)
# 215 - 234  REPOTAG (N/A if not applicable)
# 234 - 249  Calendar dates of simulation execution (yyyy/mm-yyyy/mm)
# 250 - 259  MACH (hardware)
# 260 - end  DOUT_L_MSROOT (history file location on archive)
#
EXPFILE=${HOME}/CCP_Processing_Suite/experiments.txt ; export EXPFILE
if [ -f $EXPFILE ] ; then
   MIPNAME=`egrep "^$CASE " $EXPFILE | cut -c105-  | cut -d" " -f1`
    PARENT=`egrep "^$CASE " $EXPFILE | cut -c110- | cut -d" " -f1`
    BRANCH=`egrep "^$CASE " $EXPFILE | cut -c150- | cut -d" " -f1`
   YEARBEG=`egrep "^$CASE " $EXPFILE | cut -c165-168`
   YEAREND=`egrep "^$CASE " $EXPFILE | cut -c170-173`
       RES=`egrep "^$CASE " $EXPFILE | cut -c185- | cut -d" " -f1`
   REPOTAG=`egrep "^$CASE " $EXPFILE | cut -c215- | cut -d" " -f1`
  HARDWARE=`egrep "^$CASE " $EXPFILE | cut -c250- | cut -d" " -f1`
  HISTBASE=`egrep "^$CASE " $EXPFILE | cut -c260- | cut -d" " -f1`
else
  echo "Cannot find $EXPFILE. EXIT"
  exit 1
fi
#
if ! [ $YEARBEG ] ; then
  echo "Unable to set variables because "$CASE" not found in $EXPFILE"
  exit 1
fi
#
# Acquire PROCHOST
#
PROCHOST=`hostname`;export PROCHOST
#
# resolve machine/site dependencies
#
case "$PROCHOST" in 
  yslogin* | geyser* )                                # Yellowstone (geyser) @@ CISL/NCAR
    BASEDIR=${HOME}/CCP_Processing_Suite
    NCODIR=/glade/apps/opt/nco/4.4.2/gnu/4.8.2/bin ; export NCODIR
    NCKS=${NCODIR}/ncks      ; export NCKS
    NCRA=${NCODIR}/ncra      ; export NCRA
    NCRCAT=${NCODIR}/ncrcat  ; export NCRCAT
    LOCALDSK=/glade/scratch/nanr/archive/$CASE ; export LOCALDSK
    ARCHIVE_BASE=/CCSM/csm/PAC-PACEMAKER       ; export ARCHIVE_BASE
    PROCBASE=/glade/scratch/$USER/$CASE        ; export PROCBASE
    HSIOPTS="-a P93300014"                     ; export HSIOPTS
    ;;
  * ) 
    echo "Unable to continue because "$PROCHOST" not known."
    exit 1 ;;
esac
#
# Strip off first part of $HIST
#
HTYP=`echo $HIST | cut -d'.' -f1` ; export HTYP
#
# Convert history type to component name
#
case "$HTYP" in
  cam2 | cam )
    COMP_NAME=atm ;;
  clm2 ) 
    COMP_NAME=lnd ;;
  pop  ) 
    COMP_NAME=ocn ;;
  rtm  ) 
    COMP_NAME=rof ;;
  cice ) 
    COMP_NAME=ice ;;
  * ) 
    echo "Unable to continue because "$HIST" not known."
    exit 1 ;;
esac
#
# Set up local names and archival names
#
LOCAL_HIST=$LOCALDSK/$COMP_NAME/hist
LOCAL_PROC=$PROCBASE/$COMP_NAME/${TPER}
CACHEDIR=$PROCBASE/$COMP_NAME/${TPER}/to_archive
ARCHIVE_PROC=$ARCHIVE_BASE/$COMP_NAME/proc/tseries
LOCALDISK_PROC=$DISK_BASE/$COMP_NAME/proc/tseries
#
case "$TPER" in
  mon )
    ARCHIVE_PROC=${ARCHIVE_PROC}/monthly
       DISK_PROC=${DISK_PROC}/monthly ;;
  day )
    ARCHIVE_PROC=${ARCHIVE_PROC}/daily
       DISK_PROC=${DISK_PROC}/daily ;;
  hr6 )
    ARCHIVE_PROC=${ARCHIVE_PROC}/hourly6
       DISK_PROC=${DISK_PROC}/hourly6 ;;
  * ) 
    echo "Unable to continue because "$TPER" not known."
    exit 1 ;;
esac
#
# Decide to compress or not compress output
#
case "$HTYP" in
  cam2 | cam )
    case "$TPER" in
      ann | mon )
        NCFORMAT=netcdf4c ;;
      day | hr6 | hr3 | hr1 | m30 )
        NCFORMAT=netcdf4  ;;
    esac ;;
  clm2 | pop | rtm | csim | cice ) 
    NCFORMAT=netcdf4c ;;
esac
#
YRCOUNT=`expr '(' $YEAREND '-' $YEARBEG ')' '+' '1'`
MNCOUNT=`expr '(' '(' $YEAREND '-' $YEARBEG ')' '+' '1' ')' '*' '12'`
#
# PyReshaper Arguments
#
VERBOSITY=3
#
# Create output filename time period prefix
#
PREFIX=${CACHEDIR}/${CASE}.${HIST}.
#
# Create output filename time period suffix
#
case "$TPER" in
  mon )
    OUTTIME=.${YEARBEG}01-${YEAREND}12 ;;
  day ) 
    OUTTIME=.${YEARBEG}0101-${YEAREND}1231 ;;
esac
SUFFIX=${OUTTIME}.nc
#
# Print out values
#
echo "            Case name : "$CASE ; export CASE
echo "    History file type : "$HIST ; export HIST
echo "          Time period : "$TPER ; export TPER
echo "    by var processing : YES"
echo " HPSS processed files : "$ARCHIVE_PROC ; export ARCHIVE_PROC
echo " disk processed files : "$DISK_PROC    ; export DISK_PROC
HARDWARE=${HARDWARE}".ucar.edu"
echo "          Branch date : "$BRANCH   ; export BRANCH
echo "           Resolution : "$RES      ; export RES
echo "             Hardware : "$HARDWARE ; export HARDWARE
echo "              Compset : "$COMPSET  ; export COMPSET
echo "       Repository tag : "$REPOTAG  ; export REPOTAG
echo "           Begin year : "$YEARBEG  ; export YEARBEG
echo "             End year : "$YEAREND  ; export YEAREND
echo "           Year count : "$YRCOUNT  ; export YRCOUNT
echo "         Months count : "$MNCOUNT  ; export MNCOUNT
echo ""
echo "    Archival base dir : "$ARCHIVE_BASE  ; export ARCHIVE_BASE
echo "        History files : "$ARCHIVE_HIST  ; export ARCHIVE_HIST
echo "        History names : "$HIST          ; export HIST
echo ""
echo "PyReshaper"
echo "        Output prefix : "$PREFIX        ; export PREFIX
echo "        Output suffix : "$SUFFIX        ; export SUFFIX
echo "        Output format : "$NCFORMAT      ; export NCFORMAT
echo "            Verbosity : "$VERBOSITY     ; export VERBOSITY
echo ""
echo "      Processing host : "$PROCHOST      ; export PROCHOST
echo "  Local history files : "$LOCAL_HIST    ; export LOCAL_HIST
echo "       Processing dir : "$LOCAL_PROC    ; export LOCAL_PROC
echo "    Archive cache dir : "$CACHEDIR      ; export CACHEDIR
echo "  Processing code dir : "$BASEDIR       ; export BASEDIR
#  
if [ ! -d $LOCAL_PROC ] ; then 
  mkdir -p $LOCAL_PROC 
fi
if [ ! -d $CACHEDIR ] ; then 
  mkdir -p $CACHEDIR
fi
#
cd $LOCAL_PROC
ln -s -f ${BASEDIR}/run_slice2series     Transpose_Data
ln -s -f ${BASEDIR}/store_to_archive_var .
ln -s -f ${BASEDIR}/archive_write_var    .
ln -s -f ${BASEDIR}/update_status        .
ln -s -f ${BASEDIR}/split_cice_hemis     .
#
# Start actual processing, extract each field one at a time for all times
#
./update_status start
#
if [ -d $LOCAL_HIST ] ; then
  NHISTF=`/bin/ls ${LOCAL_HIST}/${CASE}.${HIST}.[0-9]*.nc | wc -l`
  if [ $NHISTF -ne 0 ] ; then
    echo ${CASE}"."${HIST}" files on disk."
    rm -f ${CASE}.${HIST}.[0-9]*.nc
    ln -s -f ${LOCAL_HIST}/${CASE}.${HIST}.[0-9]*.nc .
  else
    echo "History files not on "${LOCAL_HIST}". Exiting."
    exit 1
  fi    
fi
#
# Extract each field from all files
#
echo -n "TS Transpose_Data start: " ; date
./Transpose_Data
if [ $? -ne 0 ] ; then
  echo "Transpose_Data failed"
  ./update_status error Transpose_Data "$CASE $HIST $TPER"
  exit 1
fi
echo -n "TS Transpose_Data end   : " ; date
#
# If cice, split hemispheres
#
case "$HTYP" in
  cice ) 
    cd $CACHEDIR
    ../split_cice_hemis
    cd $LOCAL_PROC ;;
esac
#
# Store completed data on archival system
#
echo -n "TS archive start: " ; date
./store_to_archive_var
if [ $? -ne 0 ] ; then
  echo "store_to_archive failed"
  ./update_status error "$CASE $HIST $TPER"
  exit 1
else
  echo -n "TS archive end: " ; date
fi
#
./update_status complete
echo -n "TS COMPLETE: " ; date
#
exit
@
