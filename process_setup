#!/bin/csh -f
#
# Set up a bunch of stuff
#
if ("$#argv" != 4) then
  echo "Usage: process_setup CASE type do_proc do_ipcc"
  echo "Type must be one of (atmm atmd lndm ocnm icem)"
  exit 1
else
  set proccase = $argv[1]
  set proctype = $argv[2]
  set doesproc = $argv[3]
  set doesipcc = $argv[4]
endif
#
if (${proctype} != "atmm") then
  if (${proctype} != "atmd") then
    if (${proctype} != "lndm") then
      if (${proctype} != "ocnm") then
        if (${proctype} != "icem") then
          echo "Usage: process_setup CASE type"
          echo "Type must be one of (atmm atmd lndm ocnm icem)"
          exit 1
        endif
      endif
    endif
  endif
endif
#
# Extract information from "experiments.txt"
#
set location = `egrep "^${proccase} " experiments.txt | cut -c20-  | cut -d" " -f1`
set descrip  = `egrep "^${proccase} " experiments.txt | cut -c25-  | cut -d" " -f1`
set parent   = `egrep "^${proccase} " experiments.txt | cut -c50-  | cut -d" " -f1`
set branch   = `egrep "^${proccase} " experiments.txt | cut -c65-  | cut -d" " -f1`
set yearbeg  = `egrep "^${proccase} " experiments.txt | cut -c80-  | cut -d" " -f1`
set yearend  = `egrep "^${proccase} " experiments.txt | cut -c85-  | cut -d" " -f1`
set histbase = `egrep "^${proccase} " experiments.txt | cut -c100- | cut -d" " -f1`
#
set decdbeg  = `echo $yearbeg | cut -c1-3`
set decdend  = `echo $yearend | cut -c1-3`
@ decount    = ($decdend - $decdbeg) + 1
@ mncount    = (($yearend - $yearbeg) + 1) * 12
#
# Processed data archival locations
#
switch($location)
  case "NC":                                        # NCAR experiments
    set mssbase = /CCSM/csm/${proccase}
    set machine = "mineral"
  breaksw
  case "NE":                                        # NERSC experiments
    set mssbase = /nersc/mp9/strandwg/CCSM/csm/${proccase}
    set machine = "davinci"
  breaksw
  case "OR":                                        # ORNL experiments
    set mssbase = /f2/wgstrand/CCSM/csm/${proccase}
    set machine = "lens0"
  breaksw
  default:
    echo "Unable to set mssbase because "${proccase}" not found in experiments.txt"
    exit 1
  breaksw
endsw
#
# History tape locations
#
switch($proctype)
  case "atmm":
    set histnam = "cam2.h0"
    set msshist = ${histbase}/${proccase}/atm/hist
    set mssipcc = ${mssbase}/atm/ipcc/tseries/monthly
    set mssproc = ${mssbase}/atm/proc/tseries/monthly
  breaksw
  case "atmd": 
    set histnam = "cam2.h1"
    set msshist = ${histbase}/${proccase}/atm/hist
    set mssipcc = ${mssbase}/atm/ipcc/tseries/daily
    set mssproc = ${mssbase}/atm/proc/tseries/daily
  breaksw
  case "lndm": 
    set histnam = "clm2.h0"
    set msshist = ${histbase}/${proccase}/lnd/hist
    set mssipcc = ${mssbase}/lnd/ipcc/tseries/daily
    set mssproc = ${mssbase}/lnd/proc/tseries/daily
  breaksw
  case "ocnm": 
    set histnam = "pop.h"
    set msshist = ${histbase}/${proccase}/ocn/hist
    set mssipcc = ${mssbase}/ocn/ipcc/tseries/monthly
    set mssproc = ${mssbase}/ocn/proc/tseries/monthly
  breaksw
  case "icem": 
    set histnam = "csim.h"
    set msshist = ${histbase}/${proccase}/ice/hist
    set mssipcc = ${mssbase}/ice/ipcc/tseries/monthly
    set mssproc = ${mssbase}/ice/proc/tseries/monthly
  breaksw
endsw
#
# resolve machine/site dependencies
#
switch($machine)
  case "mineral*":                                # mineral @ CGD/NCAR
    set basedir  = /home/strandwg/data/CCP_Processing_Suite
    switch($proctype)
      case "atmm": 
        set procdir = /datalocal/ccpc/$USER/${proccase}/atm/mon
      breaksw
      case "atmd": 
        set procdir = /datalocal/ccpc/$USER/${proccase}/atm/day
      breaksw
      case "lndm": 
        set procdir = /datalocal/ccpc/$USER/${proccase}/lnd/mon
      breaksw
      case "ocnm": 
        set procdir = /datalocal/ccpc/$USER/${proccase}/ocn/mon
        set regrdir = /project/ccr/strandwg/IPCC_Processing/ocn/CCSM
        set oregrid = ${basedir}/regridding/ccsm_ocn_rgd.mineral
        if !(-f ${oregrid}) then
          echo "Need to build OCN regridding code. Do that and re-run."
          exit 1
        else
          setenv CCSM_OCN_RGD $oregrid
        endif
      breaksw
      case "icem": 
        set procdir = /datalocal/ccpc/$USER/${proccase}/ocn/mon
        set regrdir = /project/ccr/strandwg/IPCC_Processing/ice/CCSM
        set iregrid = ${basedir}/regridding/ccsm_ice_rgd.mineral
        if !(-f ${iregrid}) then
          echo "Need to build ICE regridding code. Do that and re-run."
          exit 1
        else
          setenv CCSM_ICE_RGD $iregrid
         endif
      breaksw
   endsw
   breaksw

   case "davinci*":                                # davinci @ NERSC
    set basedir     = /usr/common/homes/s/strandwg/CCP_Processing_Suite
    set ccps_ncks   = /usr/common/homes/s/strandwg/bin/ncks
    set ccps_ncrcat = /usr/common/homes/s/strandwg/bin/ncrcat
    switch($proctype)
      case "atmm": 
        set procdir = /scratch/scratchdirs/$USER/${proccase}/atm/mon
      breaksw
      case "atmd": 
        set procdir = /scratch/scratchdirs/$USER/${proccase}/atm/day
      breaksw
      case "lndm": 
        set procdir = /scratch/scratchdirs/$USER/${proccase}/lnd/mon
      breaksw
      case "ocnm": 
        set procdir = /scratch/scratchdirs/$USER/${proccase}/ocn/mon
        set regrdir = /project/projectdirs/ccp/CCP_Processing_Suite/ocn/CCSM
        set oregrid = ${basedir}/regridding/ccsm_ocn_rgd.davinci
        if !(-f ${oregrid}) then
          echo "Need to build OCN regridding code. Do that and re-run."
          exit 1
        else
          setenv CCSM_OCN_RGD $oregrid
        endif
      breaksw
      case "icem": 
        set procdir = /scratch/scratchdirs/$USER/${proccase}/ice/mon
        set regrdir = /project/projectdirs/ccp/CCP_Processing_Suite/ice/CCSM
        set iregrid = ${basedir}/regridding/ccsm_ice_rgd.davinci
        if !(-f ${iregrid}) then
          echo "Need to build ICE regridding code. Do that and re-run."
          exit 1
        else
          setenv CCSM_ICE_RGD $iregrid
         endif
      breaksw
    endsw
  breaksw

  case "lens*":                                # lens @ ORNL
    set basedir     = /ccs/home/wgstrand/CCP_Processing_Suite
    set ccps_ncks   = /ccs/home/wgstrand/bin/ncks
    set ccps_ncrcat = /ccs/home/wgstrand/bin/ncrcat
    switch($proctype)
      case "atmm": 
        set procdir = /tmp/work/$USER/${proccase}/atm/mon
      breaksw
      case "atmd": 
        set procdir = /tmp/work/$USER/${proccase}/atm/day
      breaksw
      case "lndm": 
        set procdir = /tmp/work/$USER/${proccase}/lnd/mon
      breaksw
      case "ocnm": 
        set procdir = /tmp/work/$USER/${proccase}/ocn/mon
        set regrdir = /f2/wgstrand/CCP_Processing_Suite/ocn/CCSM
        set oregrid = ${basedir}/regridding/ccsm_ocn_rgd.lens0
        if !(-f ${oregrid}) then
          echo "Need to build OCN regridding code. Do that and re-run."
          exit 1
        else
          setenv CCSM_OCN_RGD $oregrid
        endif
      breaksw
      case "icem": 
        set procdir = /tmp/work/$USER/${proccase}/ice/mon
        set regrdir = /f2/wgstrand/CCP_Processing_Suite/ocn/CCSM
        set iregrid = ${basedir}/regridding/ccsm_ice_rgd.lens0
        if !(-f ${iregrid}) then
          echo "Need to build ICE regridding code. Do that and re-run."
          exit 1
        else
          setenv CCSM_ICE_RGD $iregrid
         endif
      breaksw
   endsw
   breaksw
endsw
#
# Print out values
#
echo " process_setup as of : "`date`
echo ""
echo "           Case name : "${proccase}
echo "     Processing type : "${proctype}
echo "            Location : "${location}
echo "         Description : "${descrip}
echo "         Parent case : "${parent}
echo "         Branch date : "${branch}
echo "          Begin year : "${yearbeg}
echo "            End year : "${yearend}
echo "        Months count : "${mncount}
echo "        Decade count : "${decount}
echo ""
echo "       History files : "${msshist}
echo "       History names : "${histnam}
echo "   IPCC format files : "${mssipcc}
echo "     Processed files : "${mssproc}
echo ""
echo "      Processing dir : "${procdir}
#  
if !(-d ${procdir}) mkdir -p ${procdir}
cd ${procdir}
#
if ( $doesipcc != "0") then
  setenv PARENT $parent
  setenv BRANCH $branch
  if !(-d  ${procdir}/IPCC) mkdir -p ${procdir}/IPCC
  ln -s -f ${basedir}/create_ipcc_data    .
  ln -s -f ${basedir}/CCSM_${proctype}_2cf.ncl   .
  ln -s -f ${basedir}/attributes_ccsm.ncl .
  cd ${procdir}/IPCC
  ln -s -f ${basedir}/mss_*      .
  ln -s -f ${basedir}/cf_*concat .
  cd ${procdir}
endif
#
if ( $doesproc != "0") then
  ln -s -f ${basedir}/mss_* .
  ln -s -f ${basedir}/var_* .
endif
#
exit
