#!/bin/sh
#
# Set up a bunch of stuff
#
if [ $TYPE != "atmm" ] ; then
  if [ $TYPE != "atmd" ] ; then
    if [ $TYPE != "lndm" ] ; then
      if [ $TYPE != "ocnm" ] ; then
        if [ $TYPE != "icem" ] ; then
          echo "Type must be one of (atmm atmd lndm ocnm icem)"
          exit 1
        fi
      fi
    fi
  fi
fi
#
# Extract information from "experiments.txt"
#
if [ -f ./experiments.txt ] ; then
  LOCATION=`egrep "^$CASE " experiments.txt | cut -c20-  | cut -d" " -f1`
   DESCRIP=`egrep "^$CASE " experiments.txt | cut -c25-  | cut -d" " -f1`
    PARENT=`egrep "^$CASE " experiments.txt | cut -c50-  | cut -d" " -f1`
    BRANCH=`egrep "^$CASE " experiments.txt | cut -c65-  | cut -d" " -f1`
   YEARBEG=`egrep "^$CASE " experiments.txt | cut -c80-  | cut -d" " -f1`
   YEAREND=`egrep "^$CASE " experiments.txt | cut -c85-  | cut -d" " -f1`
  HISTBASE=`egrep "^$CASE " experiments.txt | cut -c100- | cut -d" " -f1`
else
  echo "Cannot find experiments.txt. HELP"
  exit 1
fi
DEFINED=`/usr/bin/printenv | grep -c '^LOCATION='`
if ! [ $DEFINED ] ; then
  echo "Unable to set variables because "$CASE" not found in experiments.txt"
  exit 1
fi
#
DECDBEG=`echo $YEARBEG | cut -c1-3`
DECDEND=`echo $YEAREND | cut -c1-3`
DECOUNT=`expr '(' $DECDEND '-' $DECDBEG ')' '+' '1'`
MNCOUNT=`expr '(' '(' $YEAREND '-' $YEARBEG ')' '+' '1' ')' '*' '12'`
#
# Processed data archival locations
#
case "$LOCATION" in
  NC )                                        # NCAR experiments
    MSSBASE=/CCSM/csm/$CASE
    MACHINE="mineral"  ;;
  NE )                                        # NERSC experiments
    MSSBASE=/nersc/mp9/strandwg/CCSM/csm/$CASE
    MACHINE="davinci"  ;;
  OR )                                        # ORNL experiments
    MSSBASE=/f2/wgstrand/CCSM/csm/$CASE
    MACHINE="lens0"    ;;
  * )
    echo "Unable to set variables because "$LOCATION" not found in experiments.txt"
    exit 1 ;;
esac
#
# History tape locations
#
case "$TYPE" in
  atmm )
    HISTNAM="cam2.h0"
    MSSHIST=$HISTBASE/$CASE/atm/hist
    MSSIPCC=$MSSBASE/atm/ipcc/tseries/monthly
    MSSPROC=$MSSBASE/atm/proc/tseries/monthly  ;;
  atmd )
    HISTNAM="cam2.h1"
    MSSHIST=$HISTBASE/$CASE/atm/hist
    MSSIPCC=$MSSBASE/atm/ipcc/tseries/daily
    MSSPROC=$MSSBASE/atm/proc/tseries/daily    ;;
  lndm ) 
    HISTNAM="clm2.h0"
    MSSHIST=$HISTBASE/$CASE/lnd/hist
    MSSIPCC=$MSSBASE/lnd/ipcc/tseries/daily
    MSSPROC=$MSSBASE/lnd/proc/tseries/daily    ;;
  ocnm ) 
    HISTNAM="pop.h"
    MSSHIST=$HISTBASE/$CASE/ocn/hist
    MSSIPCC=$MSSBASE/ocn/ipcc/tseries/monthly
    MSSPROC=$MSSBASE/ocn/proc/tseries/monthly  ;;
  icem ) 
    HISTNAM="csim.h"
    MSSHIST=$HISTBASE/$CASE/ice/hist
    MSSIPCC=$MSSBASE/ice/ipcc/tseries/monthly
    MSSPROC=$MSSBASE/ice/proc/tseries/monthly  ;;
  * ) 
    echo "Unable to continue because "$TYPE" not known."
    exit 1 ;;
esac
#
# resolve machine/site dependencies
#
case "$MACHINE" in 
  mineral* )                                # mineral @ CGD/NCAR
    BASEDIR=/home/strandwg/data/CCP_Processing_Suite
    CCPS_NCKS=/usr/local/bin/ncks ; export CCPS_NCKS
    CCPS_NCRCAT=/usr/local/bin/ncrcat ; export CCPS_NCRCAT
    case "$TYPE" in
      atmm ) PROCDIR=/datalocal/ccpg/$USER/$CASE/atm/mon ;;
      atmd ) PROCDIR=/datalocal/ccpg/$USER/$CASE/atm/day ;;
      lndm ) PROCDIR=/datalocal/ccpg/$USER/$CASE/lnd/mon ;;
      ocnm ) 
        PROCDIR=/datalocal/ccpg/$USER/$CASE/ocn/mon
        REGRDIR=/project/ccr/strandwg/IPCC_Processing/ocn/CCSM
        OREGRID=$BASEDIR/regridding/ccsm_ocn_rgd.mineral
        if [ ! -f $OREGRID ] ; then
          echo "Need to build OCN regridding code. Do that and re-run."
          exit 1
        fi ;;
      icem ) 
        PROCDIR=/datalocal/ccpg/$USER/$CASE/ocn/mon
        REGRDIR=/project/ccr/strandwg/IPCC_Processing/ice/CCSM
        IREGRID=$BASEDIR/regridding/ccsm_ice_rgd.mineral
        if [ ! -f $IREGRID ] ; then
          echo "Need to build ICE regridding code. Do that and re-run."
          exit 1
        fi ;;
      * ) 
        echo "Unable to continue because "$TYPE" not known."
        exit 1 ;;
    esac ;;

  davinci* )                                # davinci @ NERSC
    BASEDIR=/usr/common/homes/s/strandwg/CCP_Processing_Suite
    CCPS_NCKS=/usr/common/homes/s/strandwg/bin/ncks ; export CCPS_NCKS
    CCPS_NCRCAT=/usr/common/homes/s/strandwg/bin/ncrcat ; export CCPS_NCRCAT
    case "$TYPE" in
      atmm ) PROCDIR=/scratch/scratchdirs/$USER/$CASE/atm/mon ;;
      atmd ) PROCDIR=/scratch/scratchdirs/$USER/$CASE/atm/day ;;
      lndm ) PROCDIR=/scratch/scratchdirs/$USER/$CASE/lnd/mon ;;
      ocnm ) 
        PROCDIR=/scratch/scratchdirs/$USER/$CASE/ocn/mon
        REGRDIR=/project/projectdirs/ccp/CCP_Processing_Suite/ocn/CCSM
        OREGRID=$BASEDIR/regridding/ccsm_ocn_rgd.davinci
        if [ ! -f $OREGRID ] ; then
          echo "Need to build OCN regridding code. Do that and re-run."
          exit 1
        fi ;;
      icem ) 
        procdir=/scratch/scratchdirs/$USER/$CASE/ice/mon
        regrdir=/project/projectdirs/ccp/CCP_Processing_Suite/ice/CCSM
        iregrid=$BASEDIR/regridding/ccsm_ice_rgd.davinci
        if [ ! -f $IREGRID ] ; then
          echo "Need to build ICE regridding code. Do that and re-run."
          exit 1
        else
          setenv CCSM_ICE_RGD $IREGRID
         fi ;;
      * ) 
        echo "Unable to continue because "$TYPE" not known."
        exit 1 ;;
    esac ;;

  lens* )                                # lens @ ORNL
    BASEDIR=/ccs/home/wgstrand/CCP_Processing_Suite
    CCPS_NCKS=/ccs/home/wgstrand/bin/ncks ; export CCPS_NCKS
    CCPS_NCRCAT=/ccs/home/wgstrand/bin/ncrcat ; export CCPS_NCRCAT
    case "$TYPE" in
      atmm ) PROCDIR=/tmp/work/$USER/$CASE/atm/mon ;;
      atmd ) PROCDIR=/tmp/work/$USER/$CASE/atm/day ;;
      lndm ) PROCDIR=/tmp/work/$USER/$CASE/lnd/mon ;;
      ocnm ) 
        procdir=/tmp/work/$USER/$CASE/ocn/mon
        regrdir=/f2/wgstrand/CCP_Processing_Suite/ocn/CCSM
        oregrid=$BASEDIR/regridding/ccsm_ocn_rgd.lens0
        if [ ! -f $OREGRID ] ; then
          echo "Need to build OCN regridding code. Do that and re-run."
          exit 1
        fi ;;
      icem ) 
        procdir=/tmp/work/$USER/$CASE/ice/mon
        regrdir=/f2/wgstrand/CCP_Processing_Suite/ocn/CCSM
        iregrid=$BASEDIR/regridding/ccsm_ice_rgd.lens0
        if [ ! -f $IREGRID ] ; then
          echo "Need to build ICE regridding code. Do that and re-run."
          exit 1
        fi ;;
      * ) 
        echo "Unable to continue because "$TYPE" not known."
        exit 1 ;;
    esac ;;
  * ) 
    echo "Unable to continue because "$MACHINE" not known."
    exit 1 ;;
esac
CACHEDIR=${PROCDIR}/to_archive
#
# Print out values
#
echo " process_setup as of : "`date`
echo ""
echo "           Case name : "$CASE     ; export CASE
echo "     Processing type : "$TYPE     ; export TYPE
echo "            Location : "$LOCATION ; export LOCATION
echo "         Description : "$DESCRIP  ; export DESCRIP
echo "         Parent case : "$PARENT   ; export PARENT
echo "         Branch date : "$BRANCH   ; export BRANCH
echo "          Begin year : "$YEARBEG  ; export YEARBEG
echo "            End year : "$YEAREND  ; export YEAREND
echo "        Months count : "$MNCOUNT  ; export MNCOUNT
echo "        Decade count : "$DECOUNT  ; export DECOUNT
echo ""
echo "       History files : "$MSSHIST  ; export MSSHIST
echo "       History names : "$HISTNAM  ; export HISTNAM
echo "   Archival base dir : "$MSSBASE  ; export MSSBASE
echo "   IPCC format files : "$MSSIPCC  ; export MSSIPCC
echo "     Processed files : "$MSSPROC  ; export MSSPROC
echo ""
echo "     Processing host : "$MACHINE  ; export MACHINE
echo "      Processing dir : "$PROCDIR  ; export PROCDIR
echo "   Archive cache dir : "$CACHEDIR ; export CACHEDIR
echo " Processing code dir : "$BASEDIR  ; export BASEDIR
#  
if [ ! -d $PROCDIR ] ; then 
  mkdir -p $PROCDIR 
fi
if [ ! -d $CACHEDIR ] ; then 
  mkdir -p $CACHEDIR 
fi
cd $PROCDIR
#
if [ $DO_IPCC -ne 0 ] ; then
  if [ ! -d $PROCDIR/IPCC ] ; then
     mkdir -p $PROCDIR/IPCC
  fi
  if [ $TYPE = "atmd" ] ; then
    ln -s -f $BASEDIR/time_split    .
    ln -s -f $BASEDIR/days_to_month .
  fi
  ln -s -f $BASEDIR/create_ipcc_data    .
  ln -s -f $BASEDIR/CCSM_${TYPE}_2cf.ncl   .
  ln -s -f $BASEDIR/attributes_ccsm.ncl .
  cd $PROCDIR/IPCC
  ln -s -f $BASEDIR/mss_*      .
  ln -s -f $BASEDIR/cf_*concat .
  cd $PROCDIR
fi
#
if [ $DO_PROC -ne 0 ] ; then
  if [ $TYPE = "atmd" ] ; then
    ln -s -f $BASEDIR/time_split    .
    ln -s -f $BASEDIR/days_to_month .
  fi
  ln -s -f $BASEDIR/mss_* .
  ln -s -f $BASEDIR/var_* .
fi
#
ln -s -f $BASEDIR/concatenate_data .
ln -s -f $BASEDIR/store_to_archive .
#
