#!/bin/sh
#
# Set up a bunch of stuff
#
if [ $TYPE != "atmm" ] ; then
  if [ $TYPE != "atmd" ] ; then
    if [ $TYPE != "lndm" ] ; then
      if [ $TYPE != "ocnm" ] ; then
        if [ $TYPE != "icem" ] ; then
          echo "Type must be one of (atmm atmd lndm ocnm icem)"
          exit 1
        fi
      fi
    fi
  fi
fi
#
# Extract information from "experiments.txt"
#
#  Columns   Field
#   1 -  29  CCSM case name
#  30 -  31  Location (NC = NCAR; NE = NERSC; OR = ORNL)
#  35 -  49  Very brief description and/or PCMDI name (n/a if not applicable)
#  50 -  51  Realization number (2 digits) (0 if not applicable)
#  54 -  56  Is a CMIP3 (cm3) or CMIP5 (cm5) experiment?
#  60 -  80  Parent CCSM case name 
#  85 -  94  Branch date (yyyy-mm-dd, "none" if out-of-the-box)
# 100 - 103  Year began
# 105 - 108  Year ended
# 110 - 118  Resolution
# 120 - 129  Hardware
# 130 - end  History file location on archive
#
if [ -f ./experiments.txt ] ; then
  LOCATION=`egrep "^$CASE " experiments.txt | cut -c30-  | cut -d" " -f1`
   DESCRIP=`egrep "^$CASE " experiments.txt | cut -c35-  | cut -d" " -f1`
   REALIZN=`egrep "^$CASE " experiments.txt | cut -c50-  | cut -d" " -f1`
      CMIP=`egrep "^$CASE " experiments.txt | cut -c54-56`
    PARENT=`egrep "^$CASE " experiments.txt | cut -c60-  | cut -d" " -f1`
    BRANCH=`egrep "^$CASE " experiments.txt | cut -c85-  | cut -d" " -f1`
   YEARBEG=`egrep "^$CASE " experiments.txt | cut -c100- | cut -d" " -f1`
   YEAREND=`egrep "^$CASE " experiments.txt | cut -c105- | cut -d" " -f1`
       RES=`egrep "^$CASE " experiments.txt | cut -c110- | cut -d" " -f1`
  HARDWARE=`egrep "^$CASE " experiments.txt | cut -c120- | cut -d" " -f1`
  HISTBASE=`egrep "^$CASE " experiments.txt | cut -c130- | cut -d" " -f1`
else
  echo "Cannot find experiments.txt. HELP"
  exit 1
fi
#
if ! [ $LOCATION ] ; then
  echo "Unable to set variables because "$CASE" not found in experiments.txt"
  exit 1
fi
#
YRCOUNT=`expr '(' $YEAREND '-' $YEARBEG ')' '+' '1'`
MNCOUNT=`expr '(' '(' $YEAREND '-' $YEARBEG ')' '+' '1' ')' '*' '12'`
#
# Processed data archival locations
#
case "$LOCATION" in
  NC )                                        # NCAR experiments
    MSSBASE=/CCSM/csm/$CASE
    PROCHOST="mineral"  ;;
  NE )                                        # NERSC experiments
    MSSBASE=/nersc/mp9/strandwg/CCSM/csm/$CASE
    PROCHOST="davinci"  ;;
  OR )                                        # ORNL experiments
    MSSBASE=/f2/wgstrand/CCSM/csm/$CASE
    PROCHOST="lens0"    ;;
  * )
    echo "Unable to set variables because "$LOCATION" not found in experiments.txt"
    exit 1 ;;
esac
#
# Check PROCHOST against LOCATION
#
if [ "$PROCHOST" = "mineral" ] || [ "$PROCHOST" = "lens0" ] ; then
  if [ "$LOCATION" = "NE" ] ; then
    echo "Using incorrect "$PROCHOST" for location "$LOCATION
    exit 1
  fi
fi
if [ "$PROCHOST" = "davinci" ] || [ "$PROCHOST" = "lens0" ] ; then
  if [ "$LOCATION" = "NC" ] ; then
    echo "Using incorrect "$PROCHOST" for location "$LOCATION
    exit 1
  fi
fi
if [ "$PROCHOST" = "mineral" ] || [ "$PROCHOST" = "davinci" ] ; then
  if [ "$LOCATION" = "OR" ] ; then
    echo "Using incorrect "$PROCHOST" for location "$LOCATION
    exit 1
  fi
fi
#
# History tape locations
#
case "$TYPE" in
  atmm )
    HISTNAM="cam2.h0"
    MSSHIST=$HISTBASE/$CASE/atm/hist
    MSSIPCC=$MSSBASE/atm/ipcc/tseries/monthly
    MSSPROC=$MSSBASE/atm/proc/tseries/monthly  ;;
  atmd )
    HISTNAM="cam2.h1"
    MSSHIST=$HISTBASE/$CASE/atm/hist
    MSSIPCC=$MSSBASE/atm/ipcc/tseries/daily
    MSSPROC=$MSSBASE/atm/proc/tseries/daily    ;;
  lndm ) 
    HISTNAM="clm2.h0"
    MSSHIST=$HISTBASE/$CASE/lnd/hist
    MSSIPCC=$MSSBASE/lnd/ipcc/tseries/monthly
    MSSPROC=$MSSBASE/lnd/proc/tseries/monthly  ;;
  ocnm ) 
    HISTNAM="pop.h"
    MSSHIST=$HISTBASE/$CASE/ocn/hist
    MSSIPCC=$MSSBASE/ocn/ipcc/tseries/monthly
    MSSPROC=$MSSBASE/ocn/proc/tseries/monthly  ;;
  icem ) 
    HISTNAM="csim.h"
    MSSHIST=$HISTBASE/$CASE/ice/hist
    MSSIPCC=$MSSBASE/ice/ipcc/tseries/monthly
    MSSPROC=$MSSBASE/ice/proc/tseries/monthly  ;;
  * ) 
    echo "Unable to continue because "$TYPE" not known."
    exit 1 ;;
esac
#
# resolve machine/site dependencies
#
case "$PROCHOST" in 
  mineral* )                                # mineral @ CGD/NCAR
    BASEDIR=/home/strandwg/data/CCP_Processing_Suite
    NCKS=/usr/local/bin/ncks ; export NCKS
    NCRCAT=/usr/local/bin/ncrcat ; export NCRCAT
    NCL=/contrib/bin/ncl ; export NCL
    case "$TYPE" in
      atmm ) PROCDIR=/datalocal/ccpg/$USER/$CASE/atm/mon ;;
      atmd ) PROCDIR=/datalocal/ccpg/$USER/$CASE/atm/day ;;
      lndm ) PROCDIR=/datalocal/ccpg/$USER/$CASE/lnd/mon ;;
      ocnm ) 
        PROCDIR=/datalocal/ccpg/$USER/$CASE/ocn/mon
        if [ $DO_IPCC -ne 0 ] ; then
          REGRDIR=/project/ccr/strandwg/IPCC_Processing/ocn/CCSM ; export REGRDIR
          NAMLDIR=$BASEDIR/regridding                            ; export NAMLDIR
          OREGRID=$BASEDIR/regridding/ccsm_ocn_rgd.mineral       ; export OREGRID
          if [ ! -f $OREGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
            exit 1
          fi
        fi ;;
      icem ) 
        PROCDIR=/datalocal/ccpg/$USER/$CASE/ice/mon
        if [ $DO_IPCC -ne 0 ] ; then
          REGRDIR=/project/ccr/strandwg/IPCC_Processing/ice/CCSM ; export REGRDIR
          NAMLDIR=$BASEDIR/regridding                            ; export NAMLDIR
          IREGRID=$BASEDIR/regridding/ccsm_ice_rgd.mineral       ; export IREGRID
          if [ ! -f $IREGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
            exit 1
          fi
        fi ;;
      * ) 
        echo "Unable to continue because "$TYPE" not known."
        exit 1 ;;
    esac ;;

  davinci* )                                # davinci @ NERSC
    BASEDIR=/usr/common/homes/s/strandwg/CCP_Processing_Suite
    NCKS=/usr/common/homes/s/strandwg/bin/ncks ; export NCKS
    NCRCAT=/usr/common/homes/s/strandwg/bin/ncrcat ; export NCRCAT
    case "$TYPE" in
      atmm ) PROCDIR=/scratch/scratchdirs/$USER/$CASE/atm/mon ;;
      atmd ) PROCDIR=/scratch/scratchdirs/$USER/$CASE/atm/day ;;
      lndm ) PROCDIR=/scratch/scratchdirs/$USER/$CASE/lnd/mon ;;
      ocnm ) 
        PROCDIR=/scratch/scratchdirs/$USER/$CASE/ocn/mon
        if [ $DO_IPCC -ne 0 ] ; then
          REGRDIR=/nersc/mp9/strandwg/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
          NAMLDIR=$BASEDIR/regridding                               ; export NAMLDIR
          OREGRID=$BASEDIR/regridding/ccsm_ocn_rgd.davinci	    ; export OREGRID
          if [ ! -f $OREGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
            exit 1
          fi
        fi ;;
      icem ) 
        PROCDIR=/scratch/scratchdirs/$USER/$CASE/ice/mon
        if [ $DO_IPCC -ne 0 ] ; then
          REGRDIR=/nersc/mp9/strandwg/CCP_Processing_Suite/ice/CCSM ; export REGRDIR
          NAMLDIR=$BASEDIR/regridding                               ; export NAMLDIR
          IREGRID=$BASEDIR/regridding/ccsm_ice_rgd.davinci	    ; export IREGRID
          if [ ! -f $IREGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
            exit 1
          fi
        fi ;;
      * ) 
        echo "Unable to continue because "$TYPE" not known."
        exit 1 ;;
    esac ;;

  lens* )                                # lens @ ORNL
    BASEDIR=/ccs/home/wgstrand/CCP_Processing_Suite
    NCKS=/ccs/home/wgstrand/bin/ncks ; export NCKS
    NCRCAT=/ccs/home/wgstrand/bin/ncrcat ; export NCRCAT
    case "$TYPE" in
      atmm ) PROCDIR=/tmp/work/$USER/$CASE/atm/mon ;;
      atmd ) PROCDIR=/tmp/work/$USER/$CASE/atm/day ;;
      lndm ) PROCDIR=/tmp/work/$USER/$CASE/lnd/mon ;;
      ocnm ) 
        PROCDIR=/tmp/work/$USER/$CASE/ocn/mon
        if [ $DO_IPCC -ne 0 ] ; then
          REGRDIR=/f2/wgstrand/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
          NAMLDIR=$BASEDIR/regridding                        ; export NAMLDIR
          OREGRID=$BASEDIR/regridding/ccsm_ocn_rgd.lens0     ; export IREGRID
          if [ ! -f $OREGRID ] ; then
            echo "Need to build OCN regridding code. Do that and re-run."
            exit 1
          fi
        fi ;;
      icem ) 
        PROCDIR=/tmp/work/$USER/$CASE/ice/mon
        if [ $DO_IPCC -ne 0 ] ; then
          REGRDIR=/f2/wgstrand/CCP_Processing_Suite/ocn/CCSM ; export REGRDIR
          NAMLDIR=$BASEDIR/regridding                        ; export NAMLDIR
          IREGRID=$BASEDIR/regridding/ccsm_ice_rgd.lens0     ; export IREGRID
          if [ ! -f $IREGRID ] ; then
            echo "Need to build ICE regridding code. Do that and re-run."
            exit 1
          fi
        fi ;;
      * ) 
        echo "Unable to continue because "$TYPE" not known."
        exit 1 ;;
    esac ;;
  * ) 
    echo "Unable to continue because "$PROCHOST" not known."
    exit 1 ;;
esac
CACHEDIR=${PROCDIR}/to_archive
#
# Print out values
#
echo " process_setup as of : "`date`
echo ""
echo "           Case name : "$CASE     ; export CASE
echo "     Processing type : "$TYPE     ; export TYPE
if [ $DO_PROC -ne 0 ] ; then
  echo "   by var processing : YES"
else
  echo "   by var processing : NO"
fi
if [ $DO_IPCC -ne 0 ] ; then
  echo "     IPCC processing : YES"
  if [ "$TYPE" = "ocnm" ] ; then
    echo "regridding directory : "$REGRDIR
    echo "   regridding binary : "$OREGRID
  elif [ "$TYPE" = "icem" ] ; then
    echo "regridding directory : "$REGRDIR
    echo "   regridding binary : "$IREGRID
  fi
else
  echo "     IPCC processing : NO"
fi
if [ "$LOCATION" = "NC" ] ; then
  HARDWARE=${HARDWARE}".ucar.edu"
fi
if [ "$LOCATION" = "NE" ] ; then
  HARDWARE=${HARDWARE}".nersc.gov"
fi
if [ "$LOCATION" = "OR" ] ; then
  HARDWARE=${HARDWARE}".ccs.ornl.gov"
fi
echo "            Location : "$LOCATION ; export LOCATION
echo "         Description : "$DESCRIP  ; export DESCRIP
echo "         Realization : "$REALIZN  ; export REALIZN
if [ "$CMIP" != "---" ] ; then
  echo "         CMIP version: "$CMIP     ; export CMIP
fi
echo "         Parent case : "$PARENT   ; export PARENT
echo "         Branch date : "$BRANCH   ; export BRANCH
echo "          Resolution : "$RES      ; export RES
echo "            Hardware : "$HARDWARE ; export HARDWARE
echo "          Begin year : "$YEARBEG  ; export YEARBEG
echo "            End year : "$YEAREND  ; export YEAREND
echo "          Year count : "$YRCOUNT  ; export YRCOUNT
echo "        Months count : "$MNCOUNT  ; export MNCOUNT
echo ""
echo "       History files : "$MSSHIST  ; export MSSHIST
echo "       History names : "$HISTNAM  ; export HISTNAM
echo "   Archival base dir : "$MSSBASE  ; export MSSBASE
echo "   IPCC format files : "$MSSIPCC  ; export MSSIPCC
echo "     Processed files : "$MSSPROC  ; export MSSPROC
echo ""
echo "     Processing host : "$PROCHOST ; export PROCHOST
echo "      Processing dir : "$PROCDIR  ; export PROCDIR
echo "   Archive cache dir : "$CACHEDIR ; export CACHEDIR
echo " Processing code dir : "$BASEDIR  ; export BASEDIR
#  
if [ ! -d $PROCDIR ] ; then 
  mkdir -p $PROCDIR 
fi
if [ ! -d $CACHEDIR ] ; then 
  mkdir -p $CACHEDIR 
fi
cd $PROCDIR
#
if [ $DO_IPCC -ne 0 ] ; then
  if [ ! -d $PROCDIR/IPCC ] ; then
     mkdir -p $PROCDIR/IPCC
  fi
  if [ "$TYPE" = "atmd" ] ; then
    ln -s -f $BASEDIR/time_split    .
    ln -s -f $BASEDIR/days_to_month .
  fi
  if [ "$TYPE" = "ocnm" ] ; then
    ln -s -f $OREGRID ccsm_ocn_regrid
  fi
  if [ "$TYPE" = "icem" ] ; then
    ln -s -f $IREGRID ccsm_ice_regrid
  fi
  if [ "$TYPE" = "ocnm" ] || [ "$TYPE" = "icem" ] ; then
    ln -s -f $BASEDIR/regrid_data .
    mkdir -p $PROCDIR/maps
    cd $PROCDIR/maps
    if [ "$LOCATION" = "NC" ] ; then
      ln -s -f $REGRDIR/*T*.nc .
      ln -s -f $REGRDIR/*U*.nc .
    else
      if [ "$TYPE" = "ocnm" ] ; then
        if [ `ls map_gx1v3_k*nc | wc -l` -ne 80 ] ; then
          hsi -q "cd $REGRDIR ; get *T*nc"
          hsi -q "cd $REGRDIR ; get *U*nc"
        fi
      fi
      if [ "$TYPE" = "icem" ] ; then
        if [ `ls map_gx1v3_k01*nc | wc -l` -ne 2 ] ; then
          hsi -q "cd $REGRDIR ; get *k01*T*nc"
          hsi -q "cd $REGRDIR ; get *k01*U*nc"
        fi
      fi
    fi
  fi
  cd $PROCDIR
  ln -s -f $BASEDIR/create_ipcc_data    .
  ln -s -f $BASEDIR/CCSM_${TYPE}_${CMIP}.ncl   .
  ln -s -f $BASEDIR/attributes_ccsm.ncl .
  cd $PROCDIR/IPCC
  ln -s -f $BASEDIR/mss_list   .
  ln -s -f $BASEDIR/mss_read   .
  ln -s -f $BASEDIR/mss_write  .
  ln -s -f $BASEDIR/cf_var_mon_to_year .
  ln -s -f $BASEDIR/cf_var_year_to_all .
  cd $PROCDIR
fi
#
if [ $DO_PROC -ne 0 ] ; then
  if [ "$TYPE" = "atmd" ] ; then
    ln -s -f $BASEDIR/time_split    .
    ln -s -f $BASEDIR/days_to_month .
  fi
  ln -s -f $BASEDIR/mss_list   .
  ln -s -f $BASEDIR/mss_read   .
  ln -s -f $BASEDIR/mss_write  .
  ln -s -f $BASEDIR/var_split  .
  ln -s -f $BASEDIR/var_mon_to_year .
  ln -s -f $BASEDIR/var_year_to_all .
fi
#
ln -s -f $BASEDIR/concatenate_data .
ln -s -f $BASEDIR/store_to_archive .
