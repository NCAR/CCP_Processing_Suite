#!/bin/csh -f
#
# Concatenate months of IPCC netCDF files into years
#
if ("$#argv" != 0) then
   echo "Usage: cf_var_ann_concat"
   exit 1
endif
#
# Get correct NCO binaries
#
set machine = `hostname`
switch($machine)
  case "mineral*":                                # mineral @ CGD/NCAR
    set ccps_ncks   = /usr/local/bin/ncks
    set ccps_ncrcat = /usr/local/bin/ncrcat
  breaksw
  case "davinci*":                                # davinci @ NERSC
    set ccps_ncks   = /usr/common/homes/s/strandwg/bin/ncks
    set ccps_ncrcat = /usr/common/homes/s/strandwg/bin/ncrcat
  breaksw
  case "lens*":                                # lens @ ORNL
    set ccps_ncks   = /ccs/home/wgstrand/bin/ncks
    set ccps_ncrcat = /ccs/home/wgstrand/bin/ncrcat
  breaksw
endsw
#
setenv CCPS_NCKS   ${ccps_ncks}
setenv CCPS_NCRCAT ${ccps_ncrcat}
#
set vars   = `ls | egrep '\.nc$' | cut -d"_" -f1 | uniq`
if ($status == 0) then
  set table  = `ls | egrep '\.nc$' | cut -d"_" -f2 | cut -d"." -f1 | sort | uniq`
  set expids = `ls | egrep '\.nc$' | cut -d"." -f2 | sort | uniq`
  set model  = `ls | egrep '\.nc$' | cut -d"." -f3 | sort | uniq`
  set comp   = `ls | egrep '\.nc$' | cut -d"." -f4 | sort | uniq`
  set years  = `ls | egrep '\.nc$' | cut -d"." -f5 | cut -c1-4 | sort | uniq`
#
  foreach v (${vars})
    foreach t (${table})
      foreach e (${expids})
        foreach y (${years})
          foreach m (${model})
            foreach c (${comp})
              if (-f ${v}_${t}.${e}.${m}.${c}.${y}-12.nc) then
                set num = `ls ${v}_${t}.${e}.${m}.${c}.${y}-??.nc | wc -l`
                if (${num} == 12) then
                  set df = ${v}_${t}.${e}.${m}.${c}.${y}.nc
                  $CCPS_NCRCAT -h -O ${v}_${t}.${e}.${m}.${c}.${y}-??.nc ${df}
                  if ($status == 0) then
                    rm -f ${v}_${t}.${e}.${m}.{$c}.${y}-??.nc
                    echo "Completed "${df}
                  endif
                endif
              endif
            end
          end
        end
      end
    end
  end
endif
#
exit
